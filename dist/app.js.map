{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app.ts","webpack:///./src/lib/logger.ts","webpack:///./src/lib/redis.ts","webpack:///./src/lib/sqlite.ts","webpack:///./src/lib/to.ts","webpack:///./src/lib/trace-decorator.ts","webpack:///./src/routes/interactivity.ts","webpack:///./src/routes/oauth.ts","webpack:///./src/routes/pp-command.ts","webpack:///./src/session/session-controller.ts","webpack:///./src/session/session-model.ts","webpack:///./src/team/team-model.ts","webpack:///external \"@opentelemetry/api\"","webpack:///external \"@opentelemetry/exporter-jaeger\"","webpack:///external \"@opentelemetry/tracing\"","webpack:///external \"@slack/web-api\"","webpack:///external \"async_hooks\"","webpack:///external \"body-parser\"","webpack:///external \"countly-sdk-nodejs\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-handlebars\"","webpack:///external \"lodash/chunk\"","webpack:///external \"lodash/find\"","webpack:///external \"lodash/get\"","webpack:///external \"lodash/groupBy\"","webpack:///external \"lodash/isEmpty\"","webpack:///external \"lodash/isObject\"","webpack:///external \"lodash/isString\"","webpack:///external \"lodash/map\"","webpack:///external \"lodash/pickBy\"","webpack:///external \"lodash/uniq\"","webpack:///external \"pino\"","webpack:///external \"pretty-ms\"","webpack:///external \"redis\"","webpack:///external \"shortid\"","webpack:///external \"sqlite\"","webpack:///external \"sqlite3\"","webpack:///external \"util\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,mBAAO,CAAC,sBAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAIK;AACgC;AAChE,YAAY,EAAE,CAAC;AAEmB;AACK;AACF;AACI;AACN;AACO;AACG;AACD;AACS;AACO;AACjB;AACa;AAExD,SAAe,IAAI;;QACjB,MAAM,gDAAW,EAAE,CAAC;QACpB,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;YACzB,MAAM,+CAAU,EAAE,CAAC;YACnB,MAAM,+DAAoB,EAAE,CAAC;SAC9B;QACD,MAAM,UAAU,EAAE,CAAC;QAEnB,gEAAgE;QAChE,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;YAC1D,mDAAM,CAAC,IAAI,CAAC;gBACV,GAAG,EAAE,iBAAiB;gBACtB,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAC5B,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;aACpC,CAAC,CAAC;YACH,yDAAO,CAAC,IAAI,CAAC;gBACX,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;gBACpC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;aAC7B,CAAC,CAAC;SACJ;QAED,mDAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC3C,CAAC;CAAA;AAED,SAAe,UAAU;;QACvB,MAAM,MAAM,GAAG,oCAAO,EAAE,CAAC;QAEzB,mBAAmB;QACnB,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,+CAAM,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAClC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,0BAA0B;QAE5D,aAAa;QACb,MAAM,CAAC,GAAG,CAAC,sDAAqB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,GAAG,CAAC,gDAAe,EAAE,CAAC,CAAC;QAE9B,qBAAqB;QACrB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,8CAAc,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,0BAA0B;QAE3F,eAAe;QACf,UAAU,CAAC,MAAM,CAAC,CAAC;QAEnB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE;gBACnC,mDAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC/D,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AAED,SAAS,UAAU,CAAC,MAAuB;IACzC,MAAM,MAAM,GAAG,8CAAc,EAAE,CAAC;IAChC,MAAM,uBAAuB,GAAG,iDAAkB,CAChD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAC/B,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CAAC;IAEF,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACjC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE;YAClB,MAAM,EAAE,KAAK;YACb,IAAI,EAAE;gBACJ,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;gBAC5C,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBACpC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;gBACtC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBACpC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;gBAC5C,0BAA0B,EAAE,uBAAuB;aACpD;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACxC,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;YACpB,MAAM,EAAE,KAAK;YACb,IAAI,EAAE;gBACJ,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;gBACtC,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBACpC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;aAC7C;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,wDAAU,CAAC,MAAM,CAAC,CAAC;IACxC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,kEAAc,CAAC,MAAM,CAAC,CAAC;IACxD,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE,kEAAc,CAAC,MAAM,CAAC,CAAC;IAC9D,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,yEAAkB,CAAC,MAAM,CAAC,CAAC;IACjE,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,yEAAkB,CAAC,MAAM,CAAC,CAAC;IAE/D,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QACrD,MAAM,GAAG,GAAG,kDAAkD,OAAO,CAAC,GAAG,CAAC,eAAe,UAAU,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC7H,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,kCAAkC;IAClC,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AACjD,CAAC;AAED,SAAe,YAAY;;QACzB,MAAM,aAAa,GAAG,IAAI,0EAAmB,EAAE,CAAC;QAChD,aAAa,CAAC,QAAQ,EAAE,CAAC;QAEzB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE;YAC9B,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,IAAI,6EAAc,CAAC;YAClC,WAAW,EAAE,IAAI;YACjB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;YAC7B,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC;YAC3C,MAAM,EAAE;gBACN,KAAK,EAAE,GAAG,EAAE,GAAE,CAAC;gBACf,IAAI,EAAE,GAAG,EAAE,GAAE,CAAC;gBACd,IAAI,EAAE,mDAAM,CAAC,IAAI,CAAC,IAAI,CAAC,mDAAM,CAAC;gBAC9B,KAAK,EAAE,mDAAM,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC;aACjC;SACF,CAAC,CAAC;QACH,aAAa,CAAC,gBAAgB,CAAC,IAAI,yEAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEjE,mDAAM,CAAC,IAAI,CAAC;YACV,GAAG,EAAE,wBAAwB;YAC7B,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;gBAC7B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW;aAC9B;SACF,CAAC,CAAC;IACL,CAAC;CAAA;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACnB,mDAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACxJH;AAAA;AAAA;AAAwB;AAExB,MAAM,MAAM,GAAG,2CAAI,CAAC;IAClB,UAAU,EAAE;QACV,KAAK,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;QAC5C,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC;KAC7B;CACF,CAAC,CAAC;AAEY,qEAAM,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTS;AAED;AAE9B,IAAI,MAAyB,CAAC;AAEvB,SAAe,IAAI;;QACxB,IAAI,MAAM,EAAE;YACV,+CAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,sCAAsC,EAAE,CAAC,CAAC;YAC7D,OAAO,MAAM,CAAC;SACf;QAED,+CAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,0BAA0B,EAAE,CAAC,CAAC;QACjD,MAAM,GAAG,kDAAkB,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEnD,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACpC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACzB,+CAAM,CAAC,KAAK,CAAC;gBACX,GAAG,EAAE,wBAAwB;gBAC7B,GAAG;aACJ,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA;AAEM,SAAS,YAAY;IAC1B,OAAO,MAAM,CAAC;AAChB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCkC;AACK;AACV;AAE9B,IAAI,EAAiD,CAAC;AAE/C,SAAe,IAAI;;QACxB,IAAI,EAAE,EAAE;YACN,+CAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,uCAAuC,EAAE,CAAC,CAAC;YAC9D,OAAO,EAAE,CAAC;SACX;QAED,+CAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,mBAAmB,EAAE,CAAC,CAAC;QAC1C,EAAE,GAAG,MAAM,mDAAI,CAAC;YACd,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;YAC7B,MAAM,EAAE,gDAAgB;SACzB,CAAC,CAAC;QAEH,+CAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,qBAAqB,EAAE,CAAC,CAAC;QAC5C,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC;QAEnB,OAAO,EAAE,CAAC;IACZ,CAAC;CAAA;AAEM,SAAS,YAAY;IAC1B,OAAO,EAAE,CAAC;AACZ,CAAC;;;;;;;;;;;;;AC1BD;AAAA;AAAA;;;GAGG;;;;;;;;;;AAEI,SAAe,EAAE,CAAI,OAAmB;;QAC7C,IAAI;YACF,OAAO,CAAC,SAAS,EAAE,MAAM,OAAO,CAAC,CAAC;SACnC;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;SACzB;IACH,CAAC;CAAA;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACI;AAEpD,MAAM,iBAAiB,GAAG,IAAI,6DAAiB,EAE3C,CAAC;AAEE,SAAS,KAAK,CACnB,UAEI,EAAE;IAEN,OAAO,CACL,MAAW,EACX,YAAoB,EACpB,iBAA+C,EAC/C,EAAE;QACF,MAAM,cAAc,GAAG,iBAAiB,CAAC,KAAK,CAAC;QAC/C,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,IAAI,YAAY,CAAC;QAE9C,qBAAqB;QACrB,iBAAiB,CAAC,KAAK,GAAG,UAAU,GAAG,IAAW;YAChD,MAAM,MAAM,GAAG,wDAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YACxD,MAAM,GAAG,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC;YACzC,MAAM,WAAW,GAA8B,EAAE,CAAC;YAElD,IAAI,GAAG,EAAE;gBACP,WAAW,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC;aAC/B;YAED,kCAAkC;YAClC,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;YAErD,0BAA0B;YAC1B,IAAI;gBACF,MAAM,EAAE,GAAQ,iBAAiB,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,CACnD,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CACjC,CAAC;gBAEF,mDAAmD;gBACnD,oFAAoF;gBACpF,mFAAmF;gBACnF,IAAI,OAAO,EAAE,IAAI,QAAQ,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,KAAK,EAAE;oBAChD,OAAO,EAAE;yBACN,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;wBACjB,mBAAmB;wBACnB,IAAI,CAAC,GAAG,EAAE,CAAC;wBACX,OAAO,GAAG,CAAC;oBACb,CAAC,CAAC;yBACD,KAAK,CAAC,CAAC,GAAQ,EAAE,EAAE;wBAClB,sBAAsB;wBACtB,mFAAmF;wBACnF,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;4BACrB,KAAK,EAAE,OAAO;4BACd,OAAO,EAAE,GAAG,CAAC,OAAO;4BACpB,KAAK,EAAE,GAAG,CAAC,KAAK;4BAChB,YAAY,EAAE,GAAG,CAAC,IAAI;yBACvB,CAAC,CAAC;wBACH,IAAI,CAAC,SAAS,CAAC;4BACb,IAAI,EAAE,gEAA2B,CAAC,OAAO;4BACzC,OAAO,EAAE,GAAG,CAAC,OAAO;yBACrB,CAAC,CAAC;wBACH,IAAI,CAAC,GAAG,EAAE,CAAC;wBACX,MAAM,GAAG,CAAC;oBACZ,CAAC,CAAC,CAAC;iBACN;gBAED,oDAAoD;gBACpD,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,OAAO,EAAE,CAAC;aACX;YAAC,OAAO,GAAG,EAAE;gBACZ,0BAA0B;gBAC1B,mFAAmF;gBACnF,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;oBACrB,KAAK,EAAE,OAAO;oBACd,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,KAAK,EAAE,GAAG,CAAC,KAAK;oBAChB,YAAY,EAAE,GAAG,CAAC,IAAI;iBACvB,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAE,gEAA2B,CAAC,OAAO;oBACzC,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB,CAAC,CAAC;gBACH,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,MAAM,GAAG,CAAC;aACX;QACH,CAAC,CAAC;QAEF,OAAO,iBAAiB,CAAC;IAC3B,CAAC,CAAC;AACJ,CAAC;AAEM,SAAS,OAAO;IACrB,MAAM,GAAG,GAAG,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACzC,OAAO,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC;AACnB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9FkC;AACc;AAClB;AAC0C;AAChB;AAMlB;AACE;AACJ;AAKN;AACA;AACF;AACU;AACa;AACI;AAEjD,MAAM,kBAAkB;IAC7B;;;;OAIG;IACH,MAAM,CAAO,MAAM,CAAC,GAAoB,EAAE,GAAqB;;YAC7D,IAAI,OAE4B,CAAC;YAEjC,IAAI;gBACF,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,gCAAgC;oBACrC,OAAO;oBACP,IAAI,EAAE,GAAG,CAAC,IAAI;iBACf,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,gDAAgD,OAAO,OAAO;wBAC9D,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE;gBACzD,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,sDAAsD;oBAC3D,OAAO;iBACR,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,2EAA2E;oBACjF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,QAAQ,OAAO,CAAC,IAAI,EAAE;gBACpB,KAAK,qBAAqB,CAAC,CAAC;oBAC1B,MAAM,kBAAkB,CAAC,kBAAkB,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC9D,OAAO;iBACR;gBAED,KAAK,iBAAiB,CAAC,CAAC;oBACtB,MAAM,kBAAkB,CAAC,cAAc,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC1D,OAAO;iBACR;gBAED,OAAO,CAAC,CAAC;oBACP,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;oBAC7B,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,kDAAkD;wBACvD,OAAO;wBACP,OAAO;qBACR,CAAC,CAAC;oBACH,OAAO,GAAG,CAAC,IAAI,CAAC;wBACd,IAAI,EACF,wCAAwC,OAAO,OAAO;4BACtD,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;wBACxF,aAAa,EAAE,WAAW;wBAC1B,gBAAgB,EAAE,KAAK;qBACxB,CAAC,CAAC;iBACJ;aACF;QACH,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,kBAAkB,CAAC,EAC9B,OAAO,EAAE,yBAAyB;IAClC,GAAG,GAIJ;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;gBAClB,UAAU,EAAE,OAAO,CAAC,WAAW;gBAC/B,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM;gBAC/B,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;gBAC3B,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC7B,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI;aAClC,CAAC,CAAC;YACH,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAE7C,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrB,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,4CAA4C;oBACjD,OAAO;oBACP,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,gBAAgB;oBAClD,OAAO,EAAE,wBAAwB;iBAClC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,2DAA2D,OAAO,OAAO;wBACzE,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,KAAK,CAAC;YAClC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;YAE3C,MAAM,OAAO,GAAG,+DAAqB,CAAC,SAAS,CAAC,CAAC;YAEjD,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,SAAS;oBAC3C,OAAO,EAAE,mBAAmB;iBAC7B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,mEAAmE;oBACzE,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,WAAW;YACX,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,MAAM,kDAAE,CAAC,0DAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtE,IAAI,OAAO,EAAE;gBACX,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,oBAAoB;oBACzB,OAAO;oBACP,GAAG,EAAE,OAAO;oBACZ,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,OAAO,CAAC,OAAO;iBACzB,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,8DAA8D,OAAO,OAAO;wBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,SAAS;oBAC3C,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,oBAAoB,OAAO,CAAC,IAAI,CAAC,MAAM,4DAA4D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG;oBACxI,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,QAAQ,MAAM,EAAE;gBACd;;;;mBAIG;gBACH,KAAK,QAAQ,CAAC,CAAC;oBACb,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC/C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC;oBAEvC,IAAI,aAAa,IAAI,QAAQ,EAAE;wBAC7B,MAAM,kBAAkB,CAAC,aAAa,CAAC;4BACrC,OAAO;4BACP,IAAI;4BACJ,OAAO;4BACP,GAAG;yBACJ,CAAC,CAAC;qBACJ;yBAAM,IAAI,aAAa,IAAI,QAAQ,EAAE;wBACpC,MAAM,kBAAkB,CAAC,aAAa,CAAC;4BACrC,OAAO;4BACP,IAAI;4BACJ,OAAO;4BACP,GAAG;yBACJ,CAAC,CAAC;qBACJ;yBAAM;wBACL,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;wBAC7B,mDAAM,CAAC,KAAK,CAAC;4BACX,GAAG,EAAE,kCAAkC;4BACvC,OAAO;4BACP,aAAa;4BACb,OAAO;yBACR,CAAC,CAAC;wBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;wBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;4BACd,IAAI,EAAE,iEAA2B,CAAC,gBAAgB;4BAClD,OAAO,EAAE,2BAA2B;yBACrC,CAAC,CAAC;wBACH,GAAG,CAAC,IAAI,CAAC;4BACP,IAAI,EACF,yCAAyC,OAAO,OAAO;gCACvD,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;4BACxF,aAAa,EAAE,WAAW;4BAC1B,gBAAgB,EAAE,KAAK;yBACxB,CAAC,CAAC;qBACJ;oBAED,OAAO;iBACR;gBAED;;mBAEG;gBACH,KAAK,MAAM,CAAC,CAAC;oBACX,MAAM,kBAAkB,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;oBAC/D,OAAO;iBACR;gBAED;;mBAEG;gBACH,OAAO,CAAC,CAAC;oBACP,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;oBAC7B,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,mBAAmB;wBACxB,OAAO;wBACP,MAAM;wBACN,OAAO;qBACR,CAAC,CAAC;oBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;wBACd,IAAI,EAAE,iEAA2B,CAAC,gBAAgB;wBAClD,OAAO,EAAE,mBAAmB;qBAC7B,CAAC,CAAC;oBACH,OAAO,GAAG,CAAC,IAAI,CAAC;wBACd,IAAI,EACF,kCAAkC,OAAO,OAAO;4BAChD,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;wBACxF,aAAa,EAAE,WAAW;wBAC1B,gBAAgB,EAAE,KAAK;qBACxB,CAAC,CAAC;iBACJ;aACF;QACH,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,cAAc,CAAC,EAC1B,OAAO,EAAE,yBAAyB;IAClC,GAAG,GAIJ;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;gBAClB,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM;gBAC/B,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;gBACvB,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;aAC5B,CAAC,CAAC;YAEH,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,MAAM,kDAAE,CAAC,0DAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,IAAI,UAAU,EAAE;gBACd,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,0DAA0D;oBAC/D,OAAO;oBACP,GAAG,EAAE,UAAU;oBACf,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,UAAU,CAAC,OAAO;iBAC5B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,8DAA8D,OAAO,OAAO;wBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,IAAI,EAAE;gBACT,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,mDAAmD;oBACxD,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,SAAS;oBAC3C,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,oBAAoB,OAAO,CAAC,IAAI,CAAC,MAAM,4DAA4D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG;oBACxI,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YAC5C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;YAEpC,QAAQ,UAAU,EAAE;gBAClB,KAAK,wBAAwB,CAAC,CAAC;oBAC7B,OAAO,kBAAkB,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;iBACjE;gBAED,OAAO,CAAC,CAAC;oBACP,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;oBAC7B,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,8CAA8C;wBACnD,OAAO;wBACP,UAAU;wBACV,OAAO;qBACR,CAAC,CAAC;oBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;oBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;wBACd,IAAI,EAAE,iEAA2B,CAAC,gBAAgB;wBAClD,OAAO,EAAE,wBAAwB;qBAClC,CAAC,CAAC;oBACH,OAAO,GAAG,CAAC,IAAI,CAAC;wBACd,IAAI,EACF,uDAAuD,OAAO,OAAO;4BACrE,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;wBACxF,aAAa,EAAE,WAAW;wBAC1B,gBAAgB,EAAE,KAAK;qBACxB,CAAC,CAAC;iBACJ;aACF;QACH,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,aAAa,CAAC,EACzB,OAAO,EAAE,yBAAyB;IAClC,IAAI,EACJ,GAAG,GAKJ;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;YAE7B,IAAI;gBACF,wBAAwB;gBACxB,wBAAwB;gBACxB,wBAAwB;gBACxB,IAAI,SAAiB,CAAC;gBACtB,IAAI;oBACF,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;wBAClB,kBAAkB,EAAE,OAAO,CAAC,IAAI,CAAC,gBAAgB;qBAClD,CAAC,CAAC;oBACH,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAClE,SAAS,GAAG,eAAe,CAAC,SAAS,CAAC;iBACvC;gBAAC,OAAO,GAAG,EAAE;oBACZ,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,yDAAyD;wBAC9D,OAAO;wBACP,GAAG;wBACH,OAAO;qBACR,CAAC,CAAC;oBACH,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,kBAAkB,CAAC,CAAC;iBAChE;gBAED,IAAI,CAAC,SAAS,EAAE;oBACd,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,6CAA6C;wBAClD,OAAO;wBACP,OAAO;qBACR,CAAC,CAAC;oBACH,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,kBAAkB,CAAC,CAAC;iBAChE;gBAED,2BAA2B;gBAC3B,2BAA2B;gBAC3B,2BAA2B;gBAC3B,MAAM,eAAe,GAAG,kDAAG,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;gBAChE,IAAI,CAAC,uDAAQ,CAAC,eAAe,CAAC,IAAI,qDAAO,CAAC,eAAe,CAAC,EAAE;oBAC1D,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,2DAA2D;wBAChE,OAAO;wBACP,OAAO;qBACR,CAAC,CAAC;oBACH,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,cAAc,CAAC,CAAC;iBAC5D;gBACD,MAAM,KAAK,GAAI,eAAuB,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;qBACpE,KAAK,CAAC;gBACT,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;gBAE/B,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;oBACtC,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,cAAc,CAAC,CAAC;iBAC5D;gBAED,0BAA0B;gBAC1B,0BAA0B;gBAC1B,0BAA0B;gBAC1B,MAAM,sBAAsB,GAAG,kDAAG,CAChC,OAAO,EACP,gCAAgC,CACjC,CAAC;gBACF,IACE,CAAC,uDAAQ,CAAC,sBAAsB,CAAC;oBACjC,qDAAO,CAAC,sBAAsB,CAAC,EAC/B;oBACA,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EACD,kEAAkE;wBACpE,OAAO;wBACP,OAAO;qBACR,CAAC,CAAC;oBACH,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,eAAe,CAAC,CAAC;iBAC7D;gBACD,MAAM,YAAY,GAAI,sBAA8B,CAClD,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CACvC,CAAC,cAAc,CAAC;gBACjB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBAE9D,IAAI,YAAY,CAAC,MAAM,IAAI,CAAC,EAAE;oBAC5B,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,eAAe,CAAC,CAAC;iBAC7D;gBAED,oBAAoB;gBACpB,oBAAoB;gBACpB,oBAAoB;gBACpB,MAAM,gBAAgB,GAAG,kDAAG,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;gBAClE,IAAI,CAAC,uDAAQ,CAAC,gBAAgB,CAAC,IAAI,qDAAO,CAAC,gBAAgB,CAAC,EAAE;oBAC5D,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,4DAA4D;wBACjE,OAAO;wBACP,OAAO;qBACR,CAAC,CAAC;oBACH,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,cAAc,CAAC,CAAC;iBAC5D;gBACD,MAAM,SAAS,GACZ,gBAAwB,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC1E,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;gBAC3C,IAAI,MAAM,GAAa,kDAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;gBAE3D,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,OAAO,EAAE;oBAC9C,MAAM,GAAG,0EAAc,CAAC;iBACzB;gBAED,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE;oBAC3C,MAAM,IAAI,KAAK,CAAC,sFAA0B,CAAC,cAAc,CAAC,CAAC;iBAC5D;gBAED,4BAA4B;gBAC5B,4BAA4B;gBAC5B,4BAA4B;gBAC5B,MAAM,oBAAoB,GAAG,kDAAG,CAAC,OAAO,EAAE,yBAAyB,CAAC,CAAC;gBACrE,MAAM,eAAe,GACnB,uDAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,qDAAO,CAAC,oBAAoB,CAAC;oBAC9D,CAAC,CAAE,oBAA4B,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;yBAChE,gBAAgB;oBACrB,CAAC,CAAC,EAAE,CAAC;gBACT,MAAM,WAAW,GAAG,CAAC,CAAC,kDAAI,CACxB,eAAe,EACf,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,IAAI,WAAW,CACxC,CAAC;gBACF,MAAM,gBAAgB,GAAG,CAAC,CAAC,kDAAI,CAC7B,eAAe,EACf,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,IAAI,SAAS,CACtC,CAAC;gBACF,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,WAAW,EAAE,GAAG,WAAW,EAAE,EAAE,CAAC,CAAC;gBACvD,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,gBAAgB,EAAE,GAAG,gBAAgB,EAAE,EAAE,CAAC,CAAC;gBAEjE,wBAAwB;gBACxB,MAAM,OAAO,GAAa;oBACxB,EAAE,EAAE,wDAAU,EAAE;oBAChB,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;oBACvD,KAAK;oBACL,MAAM;oBACN,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,QAAQ;oBACf,SAAS;oBACT,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBACvB,YAAY;oBACZ,sBAAsB,EAAE,SAAS;oBACjC,SAAS,EAAE,WAAW;oBACtB,OAAO,EAAE,gBAAgB;iBAC1B,CAAC;gBACF,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;oBAClB,SAAS,EAAE,OAAO,CAAC,EAAE;oBACrB,SAAS;oBACT,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBACvB,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;iBAC5B,CAAC,CAAC;gBAEH,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,wBAAwB;oBAC7B,IAAI,EAAE;wBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,IAAI,EAAE,IAAI,CAAC,IAAI;qBAChB;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;wBACnB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;qBACxB;oBACD,SAAS;oBACT,SAAS,EAAE,OAAO,CAAC,EAAE;iBACtB,CAAC,CAAC;gBAEH,MAAM,mBAAmB,GAAG,MAAM,6EAAiB,CAAC,WAAW,CAC7D,OAAO,EACP,IAAI,CACL,CAAC;gBACF,OAAO,CAAC,sBAAsB,GAAG,mBAA0B,CAAC;gBAE5D,6DAAmB,CAAC,OAAO,CAAC,CAAC;gBAE7B,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEX,MAAM,CAAC,gBAAgB,CAAC,GAAG,MAAM,kDAAE,CACjC,0DAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,EAAE;oBACnD,CAAC,kEAAiB,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC;oBAChE,CAAC,kEAAiB,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;oBACpD,CAAC,kEAAiB,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;oBAChE,CAAC,kEAAiB,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC;iBAC7D,CAAC,CACH,CAAC;gBACF,IAAI,gBAAgB,EAAE;oBACpB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC,uBAAuB,EAAE;wBACtC,OAAO,EAAE,gBAAgB,CAAC,OAAO;qBAClC,CAAC,CAAC;oBACH,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,sDAAsD;wBAC3D,OAAO;wBACP,GAAG,EAAE,gBAAgB;qBACtB,CAAC,CAAC;iBACJ;gBAED,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;oBAC/B,yDAAO,CAAC,SAAS,CAAC;wBAChB,GAAG,EAAE,eAAe;wBACpB,KAAK,EAAE,CAAC;wBACR,YAAY,EAAE;4BACZ,YAAY,EAAE,OAAO,CAAC,YAAY,CAAC,MAAM;yBAC1C;qBACF,CAAC,CAAC;iBACJ;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,IAAI,QAAQ,GAA8B,OAAO,CAAC;gBAClD,IAAI,YAAY,GACd,8DAA8D,OAAO,OAAO;oBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;gBACzF,IAAI,WAAW,GAA8B,EAAE,CAAC;gBAEhD,MAAM,cAAc,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClD,IAAI,cAAc,EAAE;oBAClB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;oBACxC,YAAY;wBACV,iCAAiC,cAAc,mBAAmB,OAAO,OAAO;4BAChF,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;iBAClF;gBAED;;mBAEG;gBACH,IAAI,cAAc,IAAI,gBAAgB,EAAE;oBACtC,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY;wBACV,kDAAkD;4BAClD,oCAAoC;4BACpC,4EAA4E,CAAC;iBAChF;qBAAM,IAAI,cAAc,IAAI,mBAAmB,EAAE;oBAChD,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY;wBACV,uCAAuC;4BACvC,6EAA6E;4BAC7E,wEAAwE;4BACxE,6EAA6E;4BAC7E,0EAA0E,CAAC;iBAC9E;qBAAM,IAAI,cAAc,IAAI,eAAe,EAAE;oBAC5C,QAAQ,GAAG,MAAM,CAAC;oBAClB,YAAY;wBACV,8DAA8D;4BAC9D,2DAA2D;4BAC3D,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,CAAC;iBACvC;qBAAM,IAAI,cAAc,IAAI,uCAAuC,EAAE;oBACpE,QAAQ,GAAG,MAAM,CAAC;oBAClB,YAAY,GAAG,6DAA6D,CAAC;iBAC9E;qBAAM,IAAI,cAAc,IAAI,eAAe,EAAE;oBAC5C,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,WAAW,EAAE;wBAClC,QAAQ,GAAG,MAAM,CAAC;wBAClB,YAAY;4BACV,4DAA4D;gCAC5D,+EAA+E;gCAC/E,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,iDAAiD,CAAC;qBACrF;yBAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,iBAAiB,EAAE;wBAC/C,QAAQ,GAAG,MAAM,CAAC;wBAClB,YAAY;4BACV,sEAAsE;gCACtE,+EAA+E;gCAC/E,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,iDAAiD,CAAC;qBACrF;iBACF;qBAAM;gBACL;;mBAEG;gBACH,GAAG,CAAC,OAAO,IAAI,sFAA0B,CAAC,eAAe,EACzD;oBACA,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY,GAAG,iCAAiC,CAAC;oBACjD,WAAW,GAAG;wBACZ,YAAY,EAAE,YAAY;qBAC3B,CAAC;iBACH;qBAAM,IAAI,GAAG,CAAC,OAAO,IAAI,sFAA0B,CAAC,cAAc,EAAE;oBACnE,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY,GAAG,mBAAmB,CAAC;oBACnC,WAAW,GAAG;wBACZ,KAAK,EAAE,YAAY;qBACpB,CAAC;iBACH;qBAAM,IAAI,GAAG,CAAC,OAAO,IAAI,sFAA0B,CAAC,cAAc,EAAE;oBACnE,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY;wBACV,+DAA+D;4BAC/D,oBAAoB,CAAC;oBACvB,WAAW,GAAG;wBACZ,MAAM,EAAE,YAAY;qBACrB,CAAC;iBACH;qBAAM,IAAI,GAAG,CAAC,OAAO,IAAI,sFAA0B,CAAC,kBAAkB,EAAE;oBACvE,SAAS,GAAG,KAAK,CAAC;oBAClB,YAAY;wBACV,6EAA6E;4BAC7E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI;4BACvF,8BAA8B,OAAO,EAAE,CAAC;iBAC3C;gBAED,IAAI,SAAS,EAAE;oBACb,mDAAM,CAAC,QAAQ,CAAC,CAAC;wBACf,GAAG,EAAE,0BAA0B;wBAC/B,OAAO;wBACP,GAAG;wBACH,OAAO;qBACR,CAAC,CAAC;iBACJ;gBAED,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;oBAClB,UAAU,EAAE,OAAO;oBACnB,gBAAgB,EAAE,YAAY;iBAC/B,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,OAAO;oBACzC,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB,CAAC,CAAC;gBAEH,yCAAyC;gBACzC,IAAI,qDAAO,CAAC,WAAW,CAAC,EAAE;oBACxB,OAAO,GAAG,CAAC,IAAI,CAAC;wBACd,eAAe,EAAE,MAAM;wBACvB,IAAI,EAAE;4BACJ,IAAI,EAAE,OAAO;4BACb,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,eAAe;gCACrB,KAAK,EAAE,IAAI;6BACZ;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,IAAI;6BACZ;4BACD,MAAM,EAAE;gCACN;oCACE,IAAI,EAAE,SAAS;oCACf,IAAI,EAAE;wCACJ,IAAI,EAAE,QAAQ;wCACd,IAAI,EAAE,OAAO,YAAY,EAAE;qCAC5B;iCACF;6BACF;yBACF;qBACF,CAAC,CAAC;iBACJ;gBAED,8BAA8B;gBAC9B,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,eAAe,EAAE,QAAQ;oBACzB,MAAM,EAAE,WAAW;iBACpB,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,IAAI,CAAC,EAChB,OAAO,EAAE,yBAAyB;IAClC,IAAI,EACJ,OAAO,EACP,GAAG,GAMJ;;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACvC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAC/B,mDAAM,CAAC,IAAI,CAAC;gBACV,GAAG,EAAE,QAAQ;gBACb,KAAK;gBACL,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,IAAI,EAAE;oBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB;gBACD,IAAI,EAAE;oBACJ,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;iBACxB;aACF,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,kDAAE,CACxB,6EAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAC9D,CAAC;YAEF,IAAI,OAAO,EAAE;gBACX,QAAQ,OAAO,CAAC,OAAO,EAAE;oBACvB,KAAK,sFAA0B,CAAC,kBAAkB,CAAC,CAAC;wBAClD,OAAO,GAAG,CAAC,IAAI,CAAC;4BACd,IAAI,EAAE,+CAA+C;4BACrD,aAAa,EAAE,WAAW;4BAC1B,gBAAgB,EAAE,KAAK;yBACxB,CAAC,CAAC;qBACJ;oBAED,KAAK,sFAA0B,CAAC,0BAA0B,CAAC,CAAC;wBAC1D,OAAO,GAAG,CAAC,IAAI,CAAC;4BACd,IAAI,EAAE,2CAA2C;4BACjD,aAAa,EAAE,WAAW;4BAC1B,gBAAgB,EAAE,KAAK;yBACxB,CAAC,CAAC;qBACJ;oBAED,gBAAgB;oBAChB,OAAO,CAAC,CAAC;wBACP,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;wBAC7B,IAAI,YAAY,GACd,8DAA8D,OAAO,OAAO;4BAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;wBAEzF,MAAM,cAAc,GAAG,YAAC,OAAe,0CAAE,IAAI,0CAAE,KAAK,CAAC;wBACrD,IAAI,cAAc,EAAE;4BAClB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;4BACxC,YAAY;gCACV,iCAAiC,cAAc,2CAA2C,OAAO,OAAO;oCACxG,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;yBAClF;wBACD,IAAI,cAAc,IAAI,mBAAmB,EAAE;4BACzC,YAAY;gCACV,iCAAiC,cAAc,uDAAuD;oCACtG,qEAAqE;oCACrE,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,2BAA2B,OAAO,EAAE,CAAC;yBACnH;wBAED,mDAAM,CAAC,KAAK,CAAC;4BACX,GAAG,EAAE,gBAAgB;4BACrB,OAAO;4BACP,GAAG,EAAE,OAAO;4BACZ,OAAO;yBACR,CAAC,CAAC;wBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;wBAC7C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;4BACd,IAAI,EAAE,iEAA2B,CAAC,gBAAgB;4BAClD,OAAO,EAAE,uBAAuB;yBACjC,CAAC,CAAC;wBACH,OAAO,GAAG,CAAC,IAAI,CAAC;4BACd,IAAI,EAAE,YAAY;4BAClB,aAAa,EAAE,WAAW;4BAC1B,gBAAgB,EAAE,KAAK;yBACxB,CAAC,CAAC;qBACJ;iBACF;aACF;YAED,qBAAqB;YAErB,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;gBAC/B,yDAAO,CAAC,SAAS,CAAC;oBAChB,GAAG,EAAE,aAAa;oBAClB,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE;wBACZ,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;qBACjC;iBACF,CAAC,CAAC;aACJ;YAED,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;;KACnB;IAED;;OAEG;IAEH,MAAM,CAAO,aAAa,CAAC,EACzB,OAAO,EAAE,yBAAyB;IAClC,IAAI,EACJ,OAAO,EACP,GAAG,GAMJ;;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;gBAClB,gBAAgB,EAAE,OAAO,CAAC,SAAS;gBACnC,gBAAgB,EAAE,OAAO,CAAC,MAAM;aACjC,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;gBAC1D,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,4DAA4D;oBAClE,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,mDAAM,CAAC,IAAI,CAAC;gBACV,GAAG,EAAE,iBAAiB;gBACtB,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,IAAI,EAAE;oBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB;gBACD,IAAI,EAAE;oBACJ,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;iBACxB;aACF,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,kDAAE,CAC1B,6EAAiB,CAAC,sBAAsB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CACzE,CAAC;YAEF,IAAI,SAAS,EAAE;gBACb,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,IAAI,YAAY,GACd,8DAA8D,OAAO,OAAO;oBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;gBAEzF,MAAM,cAAc,GAAG,YAAC,SAAiB,0CAAE,IAAI,0CAAE,KAAK,CAAC;gBACvD,IAAI,cAAc,EAAE;oBAClB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;oBACxC,YAAY;wBACV,iCAAiC,cAAc,2CAA2C,OAAO,OAAO;4BACxG,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;iBAClF;gBACD,IAAI,cAAc,IAAI,mBAAmB,EAAE;oBACzC,YAAY;wBACV,iCAAiC,cAAc,uDAAuD;4BACtG,qEAAqE;4BACrE,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,2BAA2B,OAAO,EAAE,CAAC;iBACnH;gBAED,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,0BAA0B;oBAC/B,OAAO;oBACP,GAAG,EAAE,SAAS;oBACd,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC7C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,wDAAwD;iBAClE,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,YAAY;oBAClB,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;gBAC/B,yDAAO,CAAC,SAAS,CAAC;oBAChB,GAAG,EAAE,gBAAgB;oBACrB,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,EAAE;iBACjB,CAAC,CAAC;aACJ;YAED,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;;KACnB;IAED;;OAEG;IAEH,MAAM,CAAO,aAAa,CAAC,EACzB,OAAO,EAAE,yBAAyB;IAClC,IAAI,EACJ,OAAO,EACP,GAAG,GAMJ;;;YACC,MAAM,IAAI,GAAG,qEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;gBAClB,gBAAgB,EAAE,OAAO,CAAC,SAAS;gBACnC,gBAAgB,EAAE,OAAO,CAAC,MAAM;aACjC,CAAC,CAAC;YAEH,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;gBAC1D,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,4DAA4D;oBAClE,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,mDAAM,CAAC,IAAI,CAAC;gBACV,GAAG,EAAE,oBAAoB;gBACzB,SAAS,EAAE,OAAO,CAAC,EAAE;gBACrB,IAAI,EAAE;oBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB;gBACD,IAAI,EAAE;oBACJ,EAAE,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;oBACnB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI;iBACxB;aACF,CAAC,CAAC;YACH,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,kDAAE,CAC1B,6EAAiB,CAAC,sBAAsB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CACzE,CAAC;YAEF,IAAI,SAAS,EAAE;gBACb,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,IAAI,YAAY,GACd,8DAA8D,OAAO,OAAO;oBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;gBAEzF,MAAM,cAAc,GAAG,YAAC,SAAiB,0CAAE,IAAI,0CAAE,KAAK,CAAC;gBACvD,IAAI,cAAc,EAAE;oBAClB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;oBACxC,YAAY;wBACV,iCAAiC,cAAc,2CAA2C,OAAO,OAAO;4BACxG,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC;iBAClF;gBACD,IAAI,cAAc,IAAI,mBAAmB,EAAE;oBACzC,YAAY;wBACV,iCAAiC,cAAc,uDAAuD;4BACtG,qEAAqE;4BACrE,oDAAoD,OAAO,CAAC,GAAG,CAAC,WAAW,2BAA2B,OAAO,EAAE,CAAC;iBACnH;gBAED,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,0BAA0B;oBAC/B,OAAO;oBACP,GAAG,EAAE,SAAS;oBACd,OAAO;iBACR,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC;gBAC7C,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,iEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,wDAAwD;iBAClE,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,YAAY;oBAClB,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;gBAC/B,yDAAO,CAAC,SAAS,CAAC;oBAChB,GAAG,EAAE,iBAAiB;oBACtB,KAAK,EAAE,CAAC;oBACR,YAAY,EAAE,EAAE;iBACjB,CAAC,CAAC;aACJ;YAED,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;;KACnB;CACF;AAz5BC;IADC,mEAAK,EAAE;kDAiLP;AAMD;IADC,mEAAK,EAAE;8CAqFP;AAMD;IADC,mEAAK,EAAE;6CAgWP;AAMD;IADC,mEAAK,EAAE;oCAwGP;AAMD;IADC,mEAAK,EAAE;6CAyFP;AAMD;IADC,mEAAK,EAAE;6CAyFP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1/BwC;AACR;AACM;AACM;AACE;AAClB;AAExB,MAAM,UAAU;IACrB;;OAEG;IACH,MAAM,CAAO,MAAM,CAAC,GAAoB,EAAE,GAAqB;;YAC7D,0CAA0C;YAC1C,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE;gBACnB,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,iBAAiB;oBACtB,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,KAAK;iBACrB,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC9C;YAED,aAAa;YACb,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE;gBAClB,MAAM,cAAc,GAAG,IAAI,wDAAS,EAAE,CAAC;gBACvC,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,GAAG,MAAM,kDAAE,CACzC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC;oBAC7B,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;oBACtC,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;oBAC9C,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAc;iBAC/B,CAAC,CACH,CAAC;gBAEF,IAAI,QAAQ,EAAE;oBACZ,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;oBAC7B,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,wCAAwC;wBAC7C,OAAO;wBACP,GAAG,EAAE,QAAQ;qBACd,CAAC,CAAC;oBACH,OAAO,GAAG;yBACP,MAAM,CAAC,GAAG,CAAC;yBACX,IAAI,CACH,wDAAwD,OAAO,OAAO;wBACpE,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CACzF,CAAC;iBACL;gBAED,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,MAAM,kDAAE,CAChC,0DAAS,CAAC,MAAM,CAAC;oBACf,EAAE,EAAG,cAAsB,CAAC,IAAI,CAAC,EAAE;oBACnC,IAAI,EAAG,cAAsB,CAAC,IAAI,CAAC,IAAI;oBACvC,YAAY,EAAG,cAAsB,CAAC,YAAY;oBAClD,KAAK,EAAG,cAAsB,CAAC,KAAK;oBACpC,OAAO,EAAG,cAAsB,CAAC,WAAW,CAAC,EAAE;iBAChD,CAAC,CACH,CAAC;gBAEF,IAAI,SAAS,EAAE;oBACb,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;oBAC7B,mDAAM,CAAC,KAAK,CAAC;wBACX,GAAG,EAAE,uCAAuC;wBAC5C,OAAO;wBACP,GAAG,EAAE,SAAS;qBACf,CAAC,CAAC;oBACH,GAAG;yBACA,MAAM,CAAC,GAAG,CAAC;yBACX,IAAI,CACH,8DAA8D,OAAO,OAAO;wBAC1E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CACzF,CAAC;iBACL;gBAED,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;oBAC/B,yDAAO,CAAC,SAAS,CAAC;wBAChB,GAAG,EAAE,eAAe;wBACpB,KAAK,EAAE,CAAC;wBACR,YAAY,EAAE,EAAE;qBACjB,CAAC,CAAC;iBACJ;gBAED,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,eAAe;oBACpB,IAAI;iBACL,CAAC,CAAC;gBAEH,OAAO,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE;oBACjC,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE;wBACJ,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;wBACtC,SAAS,EAAE,IAAI,CAAC,IAAI;qBACrB;iBACF,CAAC,CAAC;aACJ;YAED,gBAAgB;YAChB,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;YAC7B,mDAAM,CAAC,KAAK,CAAC;gBACX,GAAG,EAAE,gCAAgC;gBACrC,OAAO;gBACP,KAAK,EAAE,GAAG,CAAC,KAAK;aACjB,CAAC,CAAC;YACH,OAAO,GAAG;iBACP,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CACH,8BAA8B,OAAO,OAAO;gBAC1C,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,CACzF,CAAC;QACN,CAAC;KAAA;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GkC;AACM;AACyB;AACjB;AAClB;AACQ;AAKA;AACa;AACI;AAEjD,MAAM,cAAc;IACzB;;;OAGG;IACH,MAAM,CAAO,MAAM,CAAC,GAAoB,EAAE,GAAqB;;YAC7D,MAAM,GAAG,GAAG,GAAG,CAAC,IAAgC,CAAC;YAEjD,IAAI,GAAG,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE;gBACrD,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,gEAAgE;oBACrE,GAAG;iBACJ,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,2EAA2E;oBACjF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,sDAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACvB,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,oDAAoD;oBACzD,OAAO;oBACP,GAAG;iBACJ,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,yCAAyC,OAAO,OAAO;wBACvD,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChD,QAAQ,SAAS,EAAE;gBACjB,KAAK,MAAM,CAAC,CAAC;oBACX,OAAO,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACjC;gBAED,KAAK,QAAQ,CAAC,CAAC;oBACb,OAAO,MAAM,cAAc,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBACjD;gBAED,OAAO,CAAC,CAAC;oBACP,OAAO,MAAM,cAAc,CAAC,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;iBAC3D;aACF;QACH,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,mBAAmB,CAC9B,GAA6B,EAC7B,GAAqB;;YAErB,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC;gBAClB,MAAM,EAAE,GAAG,CAAC,OAAO;gBACnB,UAAU,EAAE,GAAG,CAAC,WAAW;gBAC3B,SAAS,EAAE,GAAG,CAAC,UAAU;gBACzB,WAAW,EAAE,GAAG,CAAC,YAAY;gBAC7B,MAAM,EAAE,GAAG,CAAC,OAAO;gBACnB,QAAQ,EAAE,GAAG,CAAC,SAAS;gBACvB,IAAI,EAAE,GAAG,CAAC,IAAI;aACf,CAAC,CAAC;YAEH,IAAI,GAAG,CAAC,YAAY,IAAI,eAAe,EAAE;gBACvC,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,qDAAqD;oBAC3D,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,MAAM,kDAAE,CAAC,0DAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YACrE,IAAI,UAAU,EAAE;gBACd,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,2DAA2D;oBAChE,OAAO;oBACP,GAAG,EAAE,UAAU;oBACf,GAAG;iBACJ,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,gEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,UAAU,CAAC,OAAO;iBAC5B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,8DAA8D,OAAO,OAAO;wBAC5E,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,IAAI,EAAE;gBACT,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,oDAAoD;oBACzD,GAAG;iBACJ,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,gEAA2B,CAAC,SAAS;oBAC3C,OAAO,EAAE,gBAAgB;iBAC1B,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EAAE,oBAAoB,GAAG,CAAC,WAAW,4DAA4D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG;oBACpI,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED,iDAAiD;YACjD,IACE,IAAI,CAAC,KAAK;gBACV,uEAAuE,EACvE;gBACA,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,mBAAmB;oBACxB,IAAI,EAAE;wBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,IAAI,EAAE,IAAI,CAAC,IAAI;qBAChB;oBACD,IAAI,EAAE;wBACJ,EAAE,EAAE,GAAG,CAAC,OAAO;wBACf,IAAI,EAAE,GAAG,CAAC,SAAS;qBACpB;iBACF,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC,wBAAwB,CAAC,CAAC;gBACzC,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,gCAAgC;wBAChC,sGAAsG;wBACtG,mGAAmG;wBACnG,qGAAqG;wBACrG,kGAAkG;wBAClG,iFAAiF;wBACjF,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,gEAAgE;wBAChG,uGAAuG;wBACvG,+EAA+E;oBACjF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;YAED;;;;;;;;;;;;;;;;;;;;eAoBG;YAEH,IAAI;gBACF,6CAA6C;gBAC7C,MAAM,CAAC,gBAAgB,EAAE,eAAe,CAAC,GAAG,MAAM,kDAAE,CAClD,0DAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,UAAU,CAAC,CACjD,CAAC;gBACF,IAAI,gBAAgB,EAAE;oBACpB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,CAAC,sBAAsB,EAAE;wBACrC,KAAK,EAAE,gBAAgB,CAAC,OAAO;qBAChC,CAAC,CAAC;iBACJ;gBACD,MAAM,QAAQ,GAAG;oBACf,CAAC,kEAAiB,CAAC,YAAY,CAAC,EAAE,EAAc;oBAChD,CAAC,kEAAiB,CAAC,MAAM,CAAC,EAAE,0EAAc;oBAC1C,CAAC,kEAAiB,CAAC,SAAS,CAAC,EAAE,KAAK;oBACpC,CAAC,kEAAiB,CAAC,OAAO,CAAC,EAAE,KAAK;iBACnC,CAAC;gBACF,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,kEAAiB,CAAC,YAAY,CAAC,EAAE;oBACrD,QAAQ,CAAC,kEAAiB,CAAC,YAAY,CAAC,GAAG,eAAe,CACxD,kEAAiB,CAAC,YAAY,CAC/B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACd;gBACD,IAAI,IAAI,CAAC,aAAa,EAAE;oBACtB,QAAQ,CAAC,kEAAiB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACpE;gBACD,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,kEAAiB,CAAC,MAAM,CAAC,EAAE;oBAC/C,QAAQ,CAAC,kEAAiB,CAAC,MAAM,CAAC,GAAG,eAAe,CAClD,kEAAiB,CAAC,MAAM,CACzB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACd;gBACD,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,kEAAiB,CAAC,SAAS,CAAC,EAAE;oBAClD,QAAQ,CAAC,kEAAiB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAChD,eAAe,CAAC,kEAAiB,CAAC,SAAS,CAAC,CAC7C,CAAC;iBACH;gBACD,IAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAG,kEAAiB,CAAC,OAAO,CAAC,EAAE;oBAChD,QAAQ,CAAC,kEAAiB,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAC9C,eAAe,CAAC,kEAAiB,CAAC,OAAO,CAAC,CAC3C,CAAC;iBACH;gBAED,MAAM,6EAAiB,CAAC,SAAS,CAAC;oBAChC,SAAS,EAAE,GAAG,CAAC,UAAU;oBACzB,IAAI;oBACJ,SAAS,EAAE,GAAG,CAAC,UAAU;oBACzB,KAAK,EAAE,6EAAiB,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;oBACvD,YAAY,EAAE,QAAQ,CAAC,kEAAiB,CAAC,YAAY,CAAC;oBACtD,MAAM,EAAE,QAAQ,CAAC,kEAAiB,CAAC,MAAM,CAAC;oBAC1C,WAAW,EAAE,QAAQ,CAAC,kEAAiB,CAAC,SAAS,CAAC;oBAClD,gBAAgB,EAAE,QAAQ,CAAC,kEAAiB,CAAC,OAAO,CAAC;iBACtD,CAAC,CAAC;gBAEH,+CAA+C;gBAC/C,GAAG,CAAC,IAAI,EAAE,CAAC;gBAEX,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE;oBAC/B,yDAAO,CAAC,SAAS,CAAC;wBAChB,GAAG,EAAE,0BAA0B;wBAC/B,KAAK,EAAE,CAAC;wBACR,YAAY,EAAE,EAAE;qBACjB,CAAC,CAAC;iBACJ;aACF;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,OAAO,GAAG,wDAAU,EAAE,CAAC;gBAC7B,mDAAM,CAAC,KAAK,CAAC;oBACX,GAAG,EAAE,sBAAsB;oBAC3B,OAAO;oBACP,GAAG;oBACH,GAAG;iBACJ,CAAC,CAAC;gBACH,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;gBACxC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,SAAS,CAAC;oBACd,IAAI,EAAE,gEAA2B,CAAC,QAAQ;oBAC1C,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC;oBACd,IAAI,EACF,qCAAqC,OAAO,OAAO;wBACnD,4DAA4D,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG;oBACxF,aAAa,EAAE,WAAW;oBAC1B,gBAAgB,EAAE,KAAK;iBACxB,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAO,SAAS,CAAC,GAA6B,EAAE,GAAqB;;YACzE,OAAO,GAAG,CAAC,IAAI,CAAC;gBACd,IAAI,EACF,+EAA+E;oBAC/E,gEAAgE;gBAClE,aAAa,EAAE,WAAW;gBAC1B,gBAAgB,EAAE,KAAK;aACxB,CAAC,CAAC;QACL,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,IAAI,CAAC,GAAqB;QAC/B,OAAO,GAAG,CAAC,IAAI,CAAC;YACd,IAAI,EAAE,EAAE;YACR,aAAa,EAAE,WAAW;YAC1B,gBAAgB,EAAE,KAAK;YACvB,WAAW,EAAE;gBACX;oBACE,KAAK,EAAE,SAAS;oBAChB,IAAI,EACF,SAAS,GAAG,uDAAuD;iBACtE;gBACD;oBACE,KAAK,EAAE,SAAS;oBAChB,IAAI,EACF,yBAAyB;wBACzB,8DAA8D;wBAC9D,qCAAqC;iBACxC;aACF;SACF,CAAC,CAAC;IACL,CAAC;CACF;AA9OC;IADC,kEAAK,EAAE;+CAwMP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9Q6C;AAEf;AACJ;AACQ;AAEM;AACR;AACqB;AAEjD,MAAM,cAAc,GAAG;IAC5B,GAAG;IACH,KAAK;IACL,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,GAAG;IACH,GAAG;CACJ,CAAC;AAEF,IAAY,0BAOX;AAPD,WAAY,0BAA0B;IACpC,iEAAmC;IACnC,+DAAiC;IACjC,uEAAyC;IACzC,+DAAiC;IACjC,uEAAyC;IACzC,uFAAyD;AAC3D,CAAC,EAPW,0BAA0B,KAA1B,0BAA0B,QAOrC;AAEM,MAAM,iBAAiB;IAC5B;;;OAGG;IAEH,MAAM,CAAO,WAAW,CAAC,OAAiB,EAAE,IAAW;;YACrD,MAAM,cAAc,GAAG,IAAI,wDAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACxD,MAAM,SAAS,GAAG,iDAAG,CACnB,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,EAC3B,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,MAAM,aAAa,CACrC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEb,OAAO,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;gBACrC,OAAO,EAAE,OAAO,CAAC,SAAS;gBAC1B,IAAI,EAAE,WAAW,OAAO,CAAC,KAAK,gBAAgB,SAAS,EAAE;gBACzD,WAAW,EAAE,uBAAuB,CAAC,OAAO,CAAQ;aACrD,CAAC,CAAC;QACL,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,SAAS,CAAC,EACrB,SAAS,EACT,IAAI,EACJ,SAAS,EACT,KAAK,EACL,YAAY,EACZ,MAAM,EACN,WAAW,EACX,gBAAgB,GAUjB;;YACC,MAAM,cAAc,GAAG,IAAI,wDAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExD,MAAM,yBAAyB,GAAG;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,6DAA6D;oBACnE,KAAK,EAAE,IAAI;iBACZ;gBACD,KAAK,EAAE,WAAW;aACZ,CAAC;YAET,MAAM,uBAAuB,GAAG;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,IAAI,EAAE,0DAA0D;oBAChE,KAAK,EAAE,IAAI;iBACZ;gBACD,KAAK,EAAE,SAAS;aACV,CAAC;YAET,IAAI,cAAc,GAAG,SAAS,CAAC;YAC/B,IAAI,WAAW,EAAE;gBACf,cAAc,GAAG,cAAc,IAAI,EAAE,CAAC;gBACtC,cAAc,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;aAChD;YACD,IAAI,gBAAgB,EAAE;gBACpB,cAAc,GAAG,cAAc,IAAI,EAAE,CAAC;gBACtC,cAAc,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;aAC9C;YAED,MAAM,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC;gBAC9B,UAAU,EAAE,SAAS;gBACrB,IAAI,EAAE;oBACJ,WAAW,EAAE,wBAAwB;oBACrC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,SAAS,EAAE,CAAC;oBAC/C,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE;wBACL,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,eAAe;wBACrB,KAAK,EAAE,IAAI;qBACZ;oBACD,MAAM,EAAE;wBACN,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,mBAAmB;wBACzB,KAAK,EAAE,IAAI;qBACZ;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,QAAQ;wBACd,KAAK,EAAE,IAAI;qBACZ;oBACD,MAAM,EAAE;wBACN;4BACE,IAAI,EAAE,OAAO;4BACb,QAAQ,EAAE,OAAO;4BACjB,OAAO,EAAE;gCACP,IAAI,EAAE,kBAAkB;gCACxB,WAAW,EAAE;oCACX,IAAI,EAAE,YAAY;oCAClB,IAAI,EAAE,uCAAuC;oCAC7C,KAAK,EAAE,IAAI;iCACZ;gCACD,aAAa,EAAE,KAAK,IAAI,EAAE;6BAC3B;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,IAAI;6BACZ;yBACF;wBACD;4BACE,IAAI,EAAE,OAAO;4BACb,QAAQ,EAAE,cAAc;4BACxB,OAAO,EAAE;gCACP,IAAI,EAAE,oBAAoB;gCAC1B,WAAW,EAAE;oCACX,IAAI,EAAE,YAAY;oCAClB,IAAI,EAAE,WAAW;oCACjB,KAAK,EAAE,IAAI;iCACZ;gCACD,aAAa,EAAE,YAAY;gCAC3B,0BAA0B;6BAC3B;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,cAAc;gCACpB,KAAK,EAAE,IAAI;6BACZ;yBACF;wBACD;4BACE,IAAI,EAAE,OAAO;4BACb,QAAQ,EAAE,QAAQ;4BAClB,OAAO,EAAE;gCACP,IAAI,EAAE,kBAAkB;gCACxB,WAAW,EAAE;oCACX,IAAI,EAAE,YAAY;oCAClB,IAAI,EAAE,qBAAqB;oCAC3B,KAAK,EAAE,IAAI;iCACZ;gCACD,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;6BAC5D;4BACD,IAAI,EAAE;gCACJ,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,iCAAiC;gCACvC,KAAK,EAAE,IAAI;6BACZ;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,IAAI;6BACZ;yBACF;wBACD;4BACE,IAAI,EAAE,OAAO;4BACb,QAAQ,EAAE,OAAO;4BACjB,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE;gCACP,IAAI,EAAE,YAAY;gCAClB,OAAO,EAAE,CAAC,yBAAyB,EAAE,uBAAuB,CAAC;gCAC7D,eAAe,EAAE,cAAc;6BAChC;4BACD,KAAK,EAAE;gCACL,IAAI,EAAE,YAAY;gCAClB,IAAI,EAAE,OAAO;gCACb,KAAK,EAAE,IAAI;6BACZ;yBACF;wBACD;4BACE,IAAI,EAAE,SAAS;4BACf,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;gCACd,IAAI,EACF,mGAAmG;6BACtG;yBACF;qBACF;iBACF;aACF,CAAC,CAAC;QACL,CAAC;KAAA;IAED;;;OAGG;IAEH,MAAM,CAAO,sBAAsB,CACjC,OAAiB,EACjB,IAAW,EACX,MAAc;;YAEd,OAAO,CAAC,KAAK,GAAG,UAAU,CAAC;YAC3B,MAAM,iBAAiB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7D,MAAM,qDAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC;KAAA;IAED;;;OAGG;IAEH,MAAM,CAAO,sBAAsB,CACjC,OAAiB,EACjB,IAAW,EACX,MAAc;;YAEd,OAAO,CAAC,KAAK,GAAG,WAAW,CAAC;YAC5B,MAAM,iBAAiB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;YAC7D,MAAM,qDAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxC,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,IAAI,CACf,OAAiB,EACjB,IAAW,EACX,MAAc,EACd,KAAa;;YAEb,IAAI,OAAO,CAAC,KAAK,IAAI,QAAQ,EAAE;gBAC7B,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,CAAC;aAChE;YAED,IAAI,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC9C,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,0BAA0B,CAAC,CAAC;aACxE;YAED,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;YAC9B,OAAO,CAAC,KAAK;gBACX,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM;oBAC9D,CAAC,CAAC,UAAU;oBACZ,CAAC,CAAC,QAAQ,CAAC;YAEf,IAAI,OAAO,CAAC,KAAK,IAAI,UAAU,EAAE;gBAC/B,MAAM,iBAAiB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,qBAAqB;gBAC3E,MAAM,qDAAmB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACtC,mDAAM,CAAC,IAAI,CAAC;oBACV,GAAG,EAAE,sBAAsB;oBAC3B,SAAS,EAAE,OAAO,CAAC,EAAE;oBACrB,IAAI,EAAE;wBACJ,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,IAAI,EAAE,IAAI,CAAC,IAAI;qBAChB;iBACF,CAAC,CAAC;gBACH,OAAO;aACR;YAED,yBAAyB;YACzB,MAAM,iBAAiB,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YACrD,qDAAmB,CAAC,OAAO,CAAC,CAAC;QAC/B,CAAC;KAAA;IAED;;OAEG;IAEH,MAAM,CAAO,aAAa,CAAC,OAAiB,EAAE,IAAW,EAAE,MAAe;;YACxE,MAAM,cAAc,GAAG,IAAI,wDAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAExD,IAAI,OAAO,CAAC,KAAK,IAAI,UAAU,EAAE;gBAC/B,MAAM,UAAU,GAAG,qDAAO,CACxB,OAAO,CAAC,YAAY,EACpB,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,WAAW,CACjD,CAAC;gBACF,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;qBACtC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBACrE,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;oBACb,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;oBAChC,MAAM,UAAU,GACd,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,SAAS,CAAC;oBAC5D,MAAM,OAAO,GAAG,KAAK;yBAClB,IAAI,EAAE;yBACN,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,MAAM,GAAG,CAAC;yBAC/B,IAAI,CAAC,IAAI,CAAC,CAAC;oBAEd,IAAI,KAAK,IAAI,WAAW,EAAE;wBACxB,OAAO,GAAG,UAAU,oBAAoB,OAAO,GAAG,CAAC;qBACpD;oBAED,OAAO,GAAG,UAAU,WAAW,KAAK,MAAM,OAAO,GAAG,CAAC;gBACvD,CAAC,CAAC;qBACD,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEd,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB,IAAI,OAAO,CAAC,OAAO,EAAE;oBACnB,MAAM,OAAO,GAAG,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oBAC5D,WAAW,GAAG,OAAO;wBACnB,CAAC,CAAC,cAAc,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAC7D,CAAC,CAAC,EAAE,CAAC;iBACR;gBAED,MAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC/B,EAAE,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAAE;oBACrC,OAAO,EAAE,OAAO,CAAC,sBAAsB,CAAC,OAAO;oBAC/C,IAAI,EAAE,MAAM;wBACV,CAAC,CAAC,WAAW,OAAO,CAAC,KAAK,oBAAoB,MAAM,kBAAkB,SAAS,GAAG,WAAW,EAAE;wBAC/F,CAAC,CAAC,WAAW,OAAO,CAAC,KAAK,iBAAiB,SAAS,GAAG,WAAW,EAAE;oBACtE,WAAW,EAAE,EAAE;iBAChB,CAAC,CAAC;aACJ;iBAAM,IAAI,OAAO,CAAC,KAAK,IAAI,WAAW,EAAE;gBACvC,MAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC/B,EAAE,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAAE;oBACrC,OAAO,EAAE,OAAO,CAAC,sBAAsB,CAAC,OAAO;oBAC/C,IAAI,EAAE,MAAM;wBACV,CAAC,CAAC,WAAW,OAAO,CAAC,KAAK,qBAAqB,MAAM,IAAI;wBACzD,CAAC,CAAC,WAAW,OAAO,CAAC,KAAK,eAAe;oBAC3C,WAAW,EAAE,EAAE;iBAChB,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,SAAS,GAAG,iDAAG,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,EAAE,EAAE;oBAC5D,IAAI,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;wBACxC,OAAO,KAAK,MAAM,uBAAuB,CAAC;qBAC3C;oBAED,OAAO,KAAK,MAAM,aAAa,CAAC;gBAClC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEd,MAAM,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC/B,EAAE,EAAE,OAAO,CAAC,sBAAsB,CAAC,EAAE;oBACrC,OAAO,EAAE,OAAO,CAAC,sBAAsB,CAAC,OAAO;oBAC/C,IAAI,EAAE,WAAW,OAAO,CAAC,KAAK,gBAAgB,SAAS,EAAE;oBACzD,WAAW,EAAE,uBAAuB,CAAC,OAAO,CAAQ;iBACrD,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;IAED;;OAEG;IACH,MAAM,CAAC,UAAU,CAAC,KAAgC;QAChD,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;aACvC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC;aACnC,GAAG,CAAC,UAAU,CAAC,CAAC;QACnB,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC;YAAE,OAAO,KAAK,CAAC;QAC3C,OAAO,CACL,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,CAC7D,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,CAAM;QACrB,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,aAAa,CAAC,IAAY;QAC/B,OAAO,IAAI;aACR,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;aACxB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;aACxB,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;aACtB,IAAI,EAAE,CAAC;IACZ,CAAC;CACF;AA/VC;IADC,kEAAK,EAAE;0CAaP;AAMD;IADC,kEAAK,EAAE;wCA8JP;AAOD;IADC,kEAAK,EAAE;qDASP;AAOD;IADC,kEAAK,EAAE;qDASP;AAMD;IADC,kEAAK,EAAE;mCAsCP;AAMD;IADC,kEAAK,EAAE;4CAqEP;AA+BI,SAAS,uBAAuB,CAAC,OAAiB;IACvD,MAAM,gBAAgB,GAAG,mDAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;QAC/D,OAAO;YACL,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,QAAQ,OAAO,CAAC,EAAE,EAAE;YACjC,KAAK,EAAE,SAAS;YAChB,eAAe,EAAE,SAAS;YAC1B,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBAC9B,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,QAAQ;gBACd,KAAK,EAAE,KAAK;aACb,CAAC,CAAC;SACJ,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,GAAG,gBAAgB;QACnB;YACE,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,+BAA+B;YACzC,WAAW,EAAE,UAAU,OAAO,CAAC,EAAE,EAAE;YACnC,KAAK,EAAE,SAAS;YAChB,eAAe,EAAE,SAAS;YAC1B,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,QAAQ;oBACf,KAAK,EAAE,QAAQ;iBAChB;gBACD;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,KAAK,EAAE,QAAQ;oBACf,KAAK,EAAE,QAAQ;iBAChB;aACF;SACF;KACF,CAAC;AACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrbqC;AACL;AAEE;AACA;AAEnC;;GAEG;AACH,SAAS,kBAAkB;IACzB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,YAAY,CAAC;AACpD,CAAC;AAED,SAAS,aAAa,CAAC,SAAiB;IACtC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,YAAY,SAAS,EAAE,CAAC;AAC/D,CAAC;AAED;;GAEG;AACH,IAAI,QAAQ,GAAgC,EAAE,CAAC;AAE/C;;GAEG;AACI,SAAS,QAAQ,CAAC,EAAU;IACjC,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;AACtB,CAAC;AAED;;GAEG;AACI,SAAe,OAAO;;QAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS;YAAE,OAAO;QAEnC,6BAA6B;QAC7B,MAAM,MAAM,GAAG,uDAAkB,EAAE,CAAC;QACpC,MAAM,SAAS,GAAG,sDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtD,MAAM,IAAI,GAAa,EAAE,CAAC;QAC1B,IAAI,MAAM,GAAG,GAAG,CAAC;QAEjB,GAAG;YACD,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,kBAAkB,EAAE,CAAC,CAAC;YAExE,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B,QAAQ,MAAM,KAAK,GAAG,EAAE;QAEzB,iBAAiB;QACjB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,MAAM,SAAS,GAAG,sDAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACtD,MAAM,WAAW,GAAa,MAAM,SAAS,CAAC,IAAI,CAAC,CAAC;YAEpD,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;gBACjC,IAAI,CAAC,UAAU;oBAAE,OAAO;gBAExB,IAAI;oBACF,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAa,CAAC;oBACnD,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;iBAChC;gBAAC,OAAO,GAAG,EAAE;oBACZ,OAAO;iBACR;YACH,CAAC,CAAC,CAAC;SACJ;QAED,mDAAM,CAAC,IAAI,CAAC;YACV,GAAG,EAAE,8BAA8B;YACnC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM;SACpC,CAAC,CAAC;IACL,CAAC;CAAA;AAED;;GAEG;AACH,MAAM,eAAe,GAA8B,EAAE,CAAC;AAEtD;;;;GAIG;AACI,SAAS,MAAM,CAAC,OAAiB;IACtC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;IAE/B,sCAAsC;IACtC,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;QACzB,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;YAAE,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,UAAU,CACtC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,EACzB,IAAI,CACE,CAAC;KACV;AACH,CAAC;AAED;;GAEG;AACH,SAAe,OAAO,CAAC,SAAiB;;QACtC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS;YAAE,OAAO;QAEnC,qCAAqC;QACrC,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC;QAElC,+CAA+C;QAC/C,+BAA+B;QAC/B,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO;YAAE,OAAO;QAErB,yCAAyC;QACzC,iEAAiE;QACjE,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACpD,IAAI,YAAY,IAAI,CAAC;YAAE,OAAO;QAE9B,MAAM,MAAM,GAAG,uDAAkB,EAAE,CAAC;QACpC,MAAM,QAAQ,GAAG,sDAAS,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACpD,IAAI;YACF,MAAM,QAAQ,CACZ,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,EACzB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EACvB,IAAI,EACJ,YAAY,CACb,CAAC;SACH;QAAC,OAAO,GAAG,EAAE;YACZ,mDAAM,CAAC,KAAK,CAAC;gBACX,GAAG,EAAE,2BAA2B;gBAChC,GAAG;gBACH,OAAO;gBACP,YAAY;aACb,CAAC,CAAC;SACJ;IACH,CAAC;CAAA;AAED;;GAEG;AACI,SAAe,MAAM,CAAC,EAAU;;QACrC,OAAO,QAAQ,CAAC,EAAE,CAAC,CAAC;QAEpB,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;YACzB,MAAM,MAAM,GAAG,uDAAkB,EAAE,CAAC;YACpC,MAAM,QAAQ,GAAG,sDAAS,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACpD,MAAM,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;SACnC;IACH,CAAC;CAAA;AAED;;GAEG;AACH,WAAW,CAAC,GAAG,EAAE;IACf,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAE1D,QAAQ,GAAG,oDAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,EAAE;QACtC,MAAM,YAAY,GAAG,OAAO,CAAC,SAAS,GAAG,GAAG,CAAC;QAC7C,OAAO,YAAY,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,MAAM,mBAAmB,GACvB,oBAAoB,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;IAEtD,IAAI,mBAAmB,GAAG,CAAC,EAAE;QAC3B,mDAAM,CAAC,IAAI,CAAC;YACV,GAAG,EAAE,6BAA6B;YAClC,KAAK,EAAE,mBAAmB;SAC3B,CAAC,CAAC;KACJ;AACH,CAAC,EAAE,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvK8B;AACgB;AAWxD,IAAY,iBAKX;AALD,WAAY,iBAAiB;IAC3B,kDAA6B;IAC7B,sCAAiB;IACjB,4CAAuB;IACvB,wCAAmB;AACrB,CAAC,EALW,iBAAiB,KAAjB,iBAAiB,QAK5B;AASM,MAAM,SAAS;IAEpB,MAAM,CAAO,QAAQ,CAAC,EAAU;;YAC9B,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC7B,MAAM,EAAE,GAAG,wDAAmB,EAAE,CAAC;YACjC,OAAO,EAAE,CAAC,GAAG,CAAC,iCAAiC,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC;KAAA;IAGD,MAAM,CAAO,MAAM,CAAC,EAClB,EAAE,EACF,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,OAAO,GAC2D;;YAClE,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAClD,MAAM,EAAE,GAAG,wDAAmB,EAAE,CAAC;YACjC,MAAM,EAAE,CAAC,GAAG,CACV;;;wDAGkD,EAClD;gBACE,GAAG,EAAE,EAAE;gBACP,KAAK,EAAE,IAAI;gBACX,aAAa,EAAE,YAAY;gBAC3B,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,OAAO;aAClB,CACF,CAAC;QACJ,CAAC;KAAA;IAGD,MAAM,CAAO,MAAM,CAAC,EAClB,EAAE,EACF,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,OAAO,GAC2D;;YAClE,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAClD,MAAM,EAAE,GAAG,wDAAmB,EAAE,CAAC;YACjC,MAAM,EAAE,CAAC,GAAG,CACV;;;;;;;;iBAQW,EACX;gBACE,GAAG,EAAE,EAAE;gBACP,KAAK,EAAE,IAAI;gBACX,aAAa,EAAE,YAAY;gBAC3B,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,OAAO;aAClB,CACF,CAAC;QACJ,CAAC;KAAA;IAGD,MAAM,CAAO,MAAM,CAAC,EAClB,EAAE,EACF,IAAI,EACJ,YAAY,EACZ,KAAK,EACL,OAAO,GAC2D;;YAClE,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;YAClD,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,EAAE;gBACT,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;aACpE;iBAAM;gBACL,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;aACpE;YACD,OAAO,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC;KAAA;IAGD,MAAM,CAAO,aAAa,CAAC,MAAc,EAAE,SAAiB;;YAC1D,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;YAC3C,MAAM,EAAE,GAAG,wDAAmB,EAAE,CAAC;YACjC,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,GAAG,CAC9B;;;;;;;iCAO2B,EAC3B;gBACE,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,SAAS;aACtB,CACF,CAAC;YAEF,MAAM,EAAE,GAA8B,EAAE,CAAC;YACzC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAoB,EAAE,EAAE;gBAC3C,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,OAAO,EAAE,CAAC;QACZ,CAAC;KAAA;IAGD,MAAM,CAAO,cAAc,CACzB,MAAc,EACd,SAAiB,EACjB,QAAmC;;YAEnC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,CACrD,SAAS,CAAC,aAAa,CACrB,MAAM,EACN,SAAS,EACT,UAAU,EACV,QAAQ,CAAC,UAAU,CAAC,CACrB,CACF,CAAC;YACF,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;KAAA;IAGD,MAAM,CAAO,aAAa,CACxB,MAAc,EACd,SAAiB,EACjB,GAAW,EACX,KAAa;;YAEb,MAAM,IAAI,GAAG,oEAAO,EAAE,CAAC;YACvB,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;YACvD,MAAM,EAAE,GAAG,wDAAmB,EAAE,CAAC;YACjC,MAAM,EAAE,CAAC,GAAG,CACV;;;;;;;;;mDAS6C,EAC7C;gBACE,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,SAAS;gBACrB,WAAW,EAAE,GAAG;gBAChB,aAAa,EAAE,KAAK;aACrB,CACF,CAAC;QACJ,CAAC;KAAA;CACF;AA7JC;IADC,kEAAK,CAAC,EAAE,IAAI,EAAE,eAAe,EAAE,CAAC;+BAMhC;AAGD;IADC,kEAAK,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;6BAwB9B;AAGD;IADC,kEAAK,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;6BA6B9B;AAGD;IADC,kEAAK,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;6BAiB9B;AAGD;IADC,kEAAK,EAAE;oCA0BP;AAGD;IADC,kEAAK,EAAE;qCAeP;AAGD;IADC,kEAAK,EAAE;oCA4BP;;;;;;;;;;;;ACxLH,+C;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,iC","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app.ts\");\n","require('dotenv').config();\nimport {\n  BasicTracerProvider,\n  BatchSpanProcessor,\n} from '@opentelemetry/tracing';\nimport { JaegerExporter } from '@opentelemetry/exporter-jaeger';\nsetupTracing();\n\nimport logger from './lib/logger';\nimport * as sqlite from './lib/sqlite';\nimport * as redis from './lib/redis';\nimport Countly from 'countly-sdk-nodejs';\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport * as exphbs from 'express-handlebars';\nimport { OAuthRoute } from './routes/oauth';\nimport { PPCommandRoute } from './routes/pp-command';\nimport { InteractivityRoute } from './routes/interactivity';\nimport prettyMilliseconds from 'pretty-ms';\nimport * as SessionStore from './session/session-model';\n\nasync function main() {\n  await sqlite.init();\n  if (process.env.USE_REDIS) {\n    await redis.init();\n    await SessionStore.restore();\n  }\n  await initServer();\n\n  // If countly env variables exists, start countly stat reporting\n  if (process.env.COUNTLY_APP_KEY && process.env.COUNTLY_URL) {\n    logger.info({\n      msg: `Initing countly`,\n      url: process.env.COUNTLY_URL,\n      appKey: process.env.COUNTLY_APP_KEY,\n    });\n    Countly.init({\n      app_key: process.env.COUNTLY_APP_KEY,\n      url: process.env.COUNTLY_URL,\n    });\n  }\n\n  logger.info({ msg: 'Boot successful!' });\n}\n\nasync function initServer(): Promise<void> {\n  const server = express();\n\n  // Setup handlebars\n  server.engine('html', exphbs({ extname: '.html' }));\n  server.set('view engine', 'html');\n  server.set('views', 'src/views'); // relative to process.cwd\n\n  // Parse body\n  server.use(bodyParser.urlencoded({ extended: false }));\n  server.use(bodyParser.json());\n\n  // Serve static files\n  server.use(process.env.BASE_PATH, express.static('src/public')); // relative to process.cwd\n\n  // Setup routes\n  initRoutes(server);\n\n  return new Promise((resolve, reject) => {\n    server.listen(process.env.PORT, () => {\n      logger.info({ msg: `Server running`, port: process.env.PORT });\n      resolve();\n    });\n  });\n}\n\nfunction initRoutes(server: express.Express) {\n  const router = express.Router();\n  const humanReadableSessionTTL = prettyMilliseconds(\n    Number(process.env.SESSION_TTL),\n    { verbose: true }\n  );\n\n  router.get('/', (req, res, next) => {\n    res.render('index', {\n      layout: false,\n      data: {\n        SLACK_CLIENT_ID: process.env.SLACK_CLIENT_ID,\n        SLACK_SCOPE: process.env.SLACK_SCOPE,\n        SLACK_APP_ID: process.env.SLACK_APP_ID,\n        COUNTLY_URL: process.env.COUNTLY_URL,\n        COUNTLY_APP_KEY: process.env.COUNTLY_APP_KEY,\n        HUMAN_READABLE_SESSION_TTL: humanReadableSessionTTL,\n      },\n    });\n  });\n\n  router.get('/privacy', (req, res, next) => {\n    res.render('privacy', {\n      layout: false,\n      data: {\n        SLACK_APP_ID: process.env.SLACK_APP_ID,\n        COUNTLY_URL: process.env.COUNTLY_URL,\n        COUNTLY_APP_KEY: process.env.COUNTLY_APP_KEY,\n      },\n    });\n  });\n\n  router.get('/oauth', OAuthRoute.handle);\n  router.post('/slack/pp-command', PPCommandRoute.handle);\n  router.post('/slack/pp-slash-command', PPCommandRoute.handle);\n  router.post('/slack/action-endpoint', InteractivityRoute.handle);\n  router.post('/slack/interactivity', InteractivityRoute.handle);\n\n  router.get('/slack/direct-install', (req, res, next) => {\n    const url = `https://slack.com/oauth/v2/authorize?client_id=${process.env.SLACK_CLIENT_ID}&scope=${process.env.SLACK_SCOPE}`;\n    res.status(302).redirect(url);\n  });\n\n  // Serve under specified base path\n  server.use(`${process.env.BASE_PATH}`, router);\n}\n\nasync function setupTracing() {\n  const traceProvider = new BasicTracerProvider();\n  traceProvider.register();\n\n  if (!process.env.REPORT_TRACES) {\n    return;\n  }\n\n  const exporter = new JaegerExporter({\n    serviceName: 'pp',\n    tags: [],\n    host: process.env.JAEGER_HOST,\n    port: parseInt(process.env.JAEGER_PORT, 10),\n    logger: {\n      debug: () => {},\n      info: () => {},\n      warn: logger.warn.bind(logger),\n      error: logger.error.bind(logger),\n    },\n  });\n  traceProvider.addSpanProcessor(new BatchSpanProcessor(exporter));\n\n  logger.info({\n    msg: `Trace reporter started`,\n    jaegerAgent: {\n      host: process.env.JAEGER_HOST,\n      port: process.env.JAEGER_PORT,\n    },\n  });\n}\n\nmain().catch((err) => {\n  logger.error({ msg: 'Could not boot', err });\n  process.exit(1);\n});\n","import pino from 'pino';\n\nconst logger = pino({\n  formatters: {\n    level: (label, number) => ({ level: label }),\n    bindings: (bindings) => ({}),\n  },\n});\n\nexport default logger;\n","import * as redis from 'redis';\n\nimport logger from './logger';\n\nlet client: redis.RedisClient;\n\nexport async function init() {\n  if (client) {\n    logger.warn({ msg: `Trying to init redis multiple times!` });\n    return client;\n  }\n\n  logger.info({ msg: `Creating redis client...` });\n  client = redis.createClient(process.env.REDIS_URL);\n\n  await new Promise((resolve, reject) => {\n    client.once('ready', resolve);\n    client.once('error', reject);\n  });\n\n  client.on('error', (err) => {\n    logger.error({\n      msg: `Unexpected redis error`,\n      err,\n    });\n  });\n\n  return client;\n}\n\nexport function getSingleton() {\n  return client;\n}\n","import * as sqlite3 from 'sqlite3';\nimport { open, Database } from 'sqlite';\nimport logger from './logger';\n\nlet db: Database<sqlite3.Database, sqlite3.Statement>;\n\nexport async function init() {\n  if (db) {\n    logger.warn({ msg: `Trying to init sqlite multiple times!` });\n    return db;\n  }\n\n  logger.info({ msg: `Opening sqlite...` });\n  db = await open({\n    filename: process.env.DB_FILE,\n    driver: sqlite3.Database,\n  });\n\n  logger.info({ msg: `Migrating sqlite...` });\n  await db.migrate();\n\n  return db;\n}\n\nexport function getSingleton() {\n  return db;\n}\n","/**\n * Inspired by\n * https://medium.com/javascript-in-plain-english/how-to-avoid-try-catch-statements-nesting-chaining-in-javascript-a79028b325c5\n */\n\nexport async function to<T>(promise: Promise<T>): Promise<[Error, T]> {\n  try {\n    return [undefined, await promise];\n  } catch (err) {\n    return [err, undefined];\n  }\n}\n","import { AsyncLocalStorage } from 'async_hooks';\nimport * as opentelemetry from '@opentelemetry/api';\n\nconst asyncLocalStorage = new AsyncLocalStorage<{\n  span: opentelemetry.Span;\n}>();\n\nexport function Trace(\n  options: {\n    name?: string;\n  } = {}\n) {\n  return (\n    target: any,\n    propertyName: string,\n    propertyDesciptor: TypedPropertyDescriptor<any>\n  ) => {\n    const originalMethod = propertyDesciptor.value;\n    const spanName = options.name || propertyName;\n\n    // Replace the method\n    propertyDesciptor.value = function (...args: any[]) {\n      const tracer = opentelemetry.trace.getTracer('default');\n      const ctx = asyncLocalStorage.getStore();\n      const spanOptions: opentelemetry.SpanOptions = {};\n\n      if (ctx) {\n        spanOptions.parent = ctx.span;\n      }\n\n      // Start a new span for the method\n      const span = tracer.startSpan(spanName, spanOptions);\n\n      // Execute original method\n      try {\n        const rv: any = asyncLocalStorage.run({ span }, () =>\n          originalMethod.apply(this, args)\n        );\n\n        // Auto finish is on, check return value is promise\n        // Instead of `instanceof` check, prefer checking `.then()` method exists on object.\n        // User may be using custom promise polyfill (https://stackoverflow.com/a/27746324)\n        if (typeof rv == 'object' && rv.then && rv.catch) {\n          return rv\n            .then((val: any) => {\n              // Promise resolved\n              span.end();\n              return val;\n            })\n            .catch((err: any) => {\n              // Promise is rejected\n              // https://github.com/opentracing/specification/blob/master/semantic_conventions.md\n              span.addEvent('error', {\n                event: 'error',\n                message: err.message,\n                stack: err.stack,\n                'error.kind': err.name,\n              });\n              span.setStatus({\n                code: opentelemetry.CanonicalCode.UNKNOWN,\n                message: err.message,\n              });\n              span.end();\n              throw err;\n            });\n        }\n\n        // If return value is not promise, finish and return\n        span.end();\n        return rv;\n      } catch (err) {\n        // Method throwed an error\n        // https://github.com/opentracing/specification/blob/master/semantic_conventions.md\n        span.addEvent('error', {\n          event: 'error',\n          message: err.message,\n          stack: err.stack,\n          'error.kind': err.name,\n        });\n        span.setStatus({\n          code: opentelemetry.CanonicalCode.UNKNOWN,\n          message: err.message,\n        });\n        span.end();\n        throw err;\n      }\n    };\n\n    return propertyDesciptor;\n  };\n}\n\nexport function getSpan() {\n  const ctx = asyncLocalStorage.getStore();\n  return ctx?.span;\n}\n","import * as express from 'express';\nimport logger from '../lib/logger';\nimport { generate as generateId } from 'shortid';\nimport { to } from '../lib/to';\nimport { TeamStore, ITeam, ChannelSettingKey } from '../team/team-model';\nimport * as SessionStore from '../session/session-model';\nimport { ISession } from '../session/isession';\nimport {\n  SessionController,\n  SessionControllerErrorCode,\n  DEFAULT_POINTS,\n} from '../session/session-controller';\nimport Countly from 'countly-sdk-nodejs';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n  IInteractiveMessageActionPayload,\n  IViewSubmissionActionPayload,\n} from '../vendor/slack-api-interfaces';\nimport uniq from 'lodash/uniq';\nimport find from 'lodash/find';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport * as opentelemetry from '@opentelemetry/api';\nimport { Trace, getSpan } from '../lib/trace-decorator';\n\nexport class InteractivityRoute {\n  /**\n   * POST /slack/action-endpoint\n   * POST /slack/interactivity\n   * https://api.slack.com/interactivity/handling#payloads\n   */\n  static async handle(req: express.Request, res: express.Response) {\n    let payload:\n      | IInteractiveMessageActionPayload\n      | IViewSubmissionActionPayload;\n\n    try {\n      payload = JSON.parse(req.body.payload);\n    } catch (err) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not parse action payload`,\n        errorId,\n        body: req.body,\n      });\n      return res.json({\n        text:\n          `Unexpected slack action payload (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (payload.token != process.env.SLACK_VERIFICATION_TOKEN) {\n      logger.error({\n        msg: `Could not process action, invalid verification token`,\n        payload,\n      });\n      return res.json({\n        text: `Invalid slack verification token, please get in touch with the maintainer`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    switch (payload.type) {\n      case 'interactive_message': {\n        await InteractivityRoute.interactiveMessage({ payload, res });\n        return;\n      }\n\n      case 'view_submission': {\n        await InteractivityRoute.viewSubmission({ payload, res });\n        return;\n      }\n\n      default: {\n        const errorId = generateId();\n        logger.error({\n          msg: `Unexpected interactive-message action callbackId`,\n          errorId,\n          payload,\n        });\n        return res.json({\n          text:\n            `Unexpected payload type (error code: ${errorId})\\n\\n` +\n            `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n          response_type: 'ephemeral',\n          replace_original: false,\n        });\n      }\n    }\n  }\n\n  /**\n   * A user clicks on a button on message\n   */\n  @Trace()\n  static async interactiveMessage({\n    payload, // action request payload\n    res,\n  }: {\n    payload: IInteractiveMessageActionPayload;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    span?.setAttributes({\n      callbackId: payload.callback_id,\n      teamId: payload.team.id,\n      teamDomain: payload.team.domain,\n      userId: payload.user.id,\n      userName: payload.user.name,\n      channelId: payload.channel.id,\n      channelName: payload.channel.name,\n    });\n    const parts = payload.callback_id.split(':');\n\n    if (parts.length != 2) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Unexpected interactive message callback id`,\n        errorId,\n        payload,\n      });\n      span?.setAttribute('error.id', errorId);\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INVALID_ARGUMENT,\n        message: `Unexpected callback_id`,\n      });\n      return res.json({\n        text:\n          `Unexpected interactive message callback id (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    const [action, sessionId] = parts;\n    span?.setAttributes({ action, sessionId });\n\n    const session = SessionStore.findById(sessionId);\n\n    if (!session) {\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.NOT_FOUND,\n        message: 'Session not found',\n      });\n      return res.json({\n        text: `Ooops, could not find the session, it may be expired or cancelled`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    // Get team\n    const [teamErr, team] = await to(TeamStore.findById(payload.team.id));\n\n    if (teamErr) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not get team`,\n        errorId,\n        err: teamErr,\n        payload,\n      });\n      span?.setAttribute('error.id', errorId);\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: teamErr.message,\n      });\n      return res.json({\n        text:\n          `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (!team) {\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.NOT_FOUND,\n        message: 'Team not found',\n      });\n      return res.json({\n        text: `Your Slack team (${payload.team.domain}) could not be found, please reinstall Poker Planner on <${process.env.APP_INSTALL_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    switch (action) {\n      /**\n       * A user clicked session actions button:\n       * - Reveal\n       * - Cancel\n       */\n      case 'action': {\n        const sessionAction = payload.actions[0].value;\n        span?.setAttributes({ sessionAction });\n\n        if (sessionAction == 'reveal') {\n          await InteractivityRoute.revealSession({\n            payload,\n            team,\n            session,\n            res,\n          });\n        } else if (sessionAction == 'cancel') {\n          await InteractivityRoute.cancelSession({\n            payload,\n            team,\n            session,\n            res,\n          });\n        } else {\n          const errorId = generateId();\n          logger.error({\n            msg: `Unexpected action button clicked`,\n            errorId,\n            sessionAction,\n            payload,\n          });\n          span?.setAttribute('error.id', errorId);\n          span?.setStatus({\n            code: opentelemetry.CanonicalCode.INVALID_ARGUMENT,\n            message: `Unexpected session action`,\n          });\n          res.json({\n            text:\n              `Unexpected action button (error code: ${errorId})\\n\\n` +\n              `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n            response_type: 'ephemeral',\n            replace_original: false,\n          });\n        }\n\n        return;\n      }\n\n      /**\n       * A user clicked vote point button\n       */\n      case 'vote': {\n        await InteractivityRoute.vote({ payload, team, session, res });\n        return;\n      }\n\n      /**\n       * Unexpected action\n       */\n      default: {\n        const errorId = generateId();\n        logger.error({\n          msg: `Unexpected action`,\n          errorId,\n          action,\n          payload,\n        });\n        span?.setAttribute('error.id', errorId);\n        span?.setStatus({\n          code: opentelemetry.CanonicalCode.INVALID_ARGUMENT,\n          message: `Unexpected action`,\n        });\n        return res.json({\n          text:\n            `Unexpected action (error code: ${errorId})\\n\\n` +\n            `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n          response_type: 'ephemeral',\n          replace_original: false,\n        });\n      }\n    }\n  }\n\n  /**\n   * A user clicks a submit button a view\n   */\n  @Trace()\n  static async viewSubmission({\n    payload, // action request payload\n    res,\n  }: {\n    payload: IViewSubmissionActionPayload;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    span?.setAttributes({\n      teamId: payload.team.id,\n      teamDomain: payload.team.domain,\n      userId: payload.user.id,\n      userName: payload.user.name,\n    });\n\n    const [teamGetErr, team] = await to(TeamStore.findById(payload.team.id));\n    if (teamGetErr) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not create session, could not get the team from db`,\n        errorId,\n        err: teamGetErr,\n        payload,\n      });\n      span?.setAttribute('error.id', errorId);\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: teamGetErr.message,\n      });\n      return res.json({\n        text:\n          `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (!team) {\n      logger.info({\n        msg: `Could not create session, team could not be found`,\n        payload,\n      });\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.NOT_FOUND,\n        message: 'Team not found',\n      });\n      return res.json({\n        text: `Your Slack team (${payload.team.domain}) could not be found, please reinstall Poker Planner on <${process.env.APP_INSTALL_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    const callbackId = payload.view.callback_id;\n    span?.setAttributes({ callbackId });\n\n    switch (callbackId) {\n      case 'newSessionModal:submit': {\n        return InteractivityRoute.createSession({ payload, team, res });\n      }\n\n      default: {\n        const errorId = generateId();\n        logger.error({\n          msg: `Unexpected view-submission action callbackId`,\n          errorId,\n          callbackId,\n          payload,\n        });\n        span?.setAttribute('error.id', errorId);\n        span?.setStatus({\n          code: opentelemetry.CanonicalCode.INVALID_ARGUMENT,\n          message: `Unexpected callback_id`,\n        });\n        return res.json({\n          text:\n            `Unexpected view-submission callback id (error code: ${errorId})\\n\\n` +\n            `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n          response_type: 'ephemeral',\n          replace_original: false,\n        });\n      }\n    }\n  }\n\n  /**\n   * A user submits the `new session` modal.\n   */\n  @Trace()\n  static async createSession({\n    payload, // action request payload\n    team,\n    res,\n  }: {\n    payload: IViewSubmissionActionPayload;\n    team: ITeam;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    const errorId = generateId();\n\n    try {\n      ////////////////////////\n      // Get the channel id //\n      ////////////////////////\n      let channelId: string;\n      try {\n        span?.setAttributes({\n          rawPrivateMetadata: payload.view.private_metadata,\n        });\n        const privateMetadata = JSON.parse(payload.view.private_metadata);\n        channelId = privateMetadata.channelId;\n      } catch (err) {\n        logger.error({\n          msg: 'Could not create session: Cannot parse private_metadata',\n          errorId,\n          err,\n          payload,\n        });\n        throw new Error(SessionControllerErrorCode.UNEXPECTED_PAYLOAD);\n      }\n\n      if (!channelId) {\n        logger.error({\n          msg: 'Could not create session: Missing channelId',\n          errorId,\n          payload,\n        });\n        throw new Error(SessionControllerErrorCode.UNEXPECTED_PAYLOAD);\n      }\n\n      ///////////////////////////\n      // Get the session title //\n      ///////////////////////////\n      const titleInputState = get(payload, 'view.state.values.title');\n      if (!isObject(titleInputState) || isEmpty(titleInputState)) {\n        logger.error({\n          msg: 'Could not create session: Title is not an object or empty',\n          errorId,\n          payload,\n        });\n        throw new Error(SessionControllerErrorCode.TITLE_REQUIRED);\n      }\n      const title = (titleInputState as any)[Object.keys(titleInputState)[0]]\n        .value;\n      span?.setAttributes({ title });\n\n      if (!title || title.trim().length == 0) {\n        throw new Error(SessionControllerErrorCode.TITLE_REQUIRED);\n      }\n\n      //////////////////////////\n      // Get the participants //\n      //////////////////////////\n      const participantsInputState = get(\n        payload,\n        'view.state.values.participants'\n      );\n      if (\n        !isObject(participantsInputState) ||\n        isEmpty(participantsInputState)\n      ) {\n        logger.error({\n          msg:\n            'Could not create session: Participants is not an object or empty',\n          errorId,\n          payload,\n        });\n        throw new Error(SessionControllerErrorCode.NO_PARTICIPANTS);\n      }\n      const participants = (participantsInputState as any)[\n        Object.keys(participantsInputState)[0]\n      ].selected_users;\n      span?.setAttributes({ participants: participants.join(' ') });\n\n      if (participants.length == 0) {\n        throw new Error(SessionControllerErrorCode.NO_PARTICIPANTS);\n      }\n\n      ////////////////////\n      // Get the points //\n      ////////////////////\n      const pointsInputState = get(payload, 'view.state.values.points');\n      if (!isObject(pointsInputState) || isEmpty(pointsInputState)) {\n        logger.error({\n          msg: 'Could not create session: Points is not an object or empty',\n          errorId,\n          payload,\n        });\n        throw new Error(SessionControllerErrorCode.INVALID_POINTS);\n      }\n      const pointsStr =\n        (pointsInputState as any)[Object.keys(pointsInputState)[0]].value || '';\n      span?.setAttributes({ points: pointsStr });\n      let points: string[] = uniq(pointsStr.match(/\\S+/g)) || [];\n\n      if (points.length == 1 && points[0] == 'reset') {\n        points = DEFAULT_POINTS;\n      }\n\n      if (points.length < 2 || points.length > 25) {\n        throw new Error(SessionControllerErrorCode.INVALID_POINTS);\n      }\n\n      ////////////////////////////\n      // Get \"other\" checkboxes //\n      ////////////////////////////\n      const otherCheckboxesState = get(payload, 'view.state.values.other');\n      const selectedOptions =\n        isObject(otherCheckboxesState) && !isEmpty(otherCheckboxesState)\n          ? (otherCheckboxesState as any)[Object.keys(otherCheckboxesState)[0]]\n              .selected_options\n          : [];\n      const isProtected = !!find(\n        selectedOptions,\n        (option) => option.value == 'protected'\n      );\n      const calculateAverage = !!find(\n        selectedOptions,\n        (option) => option.value == 'average'\n      );\n      span?.setAttributes({ isProtected: `${isProtected}` });\n      span?.setAttributes({ calculateAverage: `${calculateAverage}` });\n\n      // Create session struct\n      const session: ISession = {\n        id: generateId(),\n        expiresAt: Date.now() + Number(process.env.SESSION_TTL),\n        title,\n        points,\n        votes: {},\n        state: 'active',\n        channelId,\n        userId: payload.user.id,\n        participants,\n        rawPostMessageResponse: undefined,\n        protected: isProtected,\n        average: calculateAverage,\n      };\n      span?.setAttributes({\n        sessionId: session.id,\n        channelId,\n        userId: payload.user.id,\n        userName: payload.user.name,\n      });\n\n      logger.info({\n        msg: `Creating a new session`,\n        team: {\n          id: team.id,\n          name: team.name,\n        },\n        user: {\n          id: payload.user.id,\n          name: payload.user.name,\n        },\n        channelId,\n        sessionId: session.id,\n      });\n\n      const postMessageResponse = await SessionController.postMessage(\n        session,\n        team\n      );\n      session.rawPostMessageResponse = postMessageResponse as any;\n\n      SessionStore.upsert(session);\n\n      res.send();\n\n      const [upsertSettingErr] = await to(\n        TeamStore.upsertSettings(team.id, session.channelId, {\n          [ChannelSettingKey.PARTICIPANTS]: session.participants.join(' '),\n          [ChannelSettingKey.POINTS]: session.points.join(' '),\n          [ChannelSettingKey.PROTECTED]: JSON.stringify(session.protected),\n          [ChannelSettingKey.AVERAGE]: JSON.stringify(session.average),\n        })\n      );\n      if (upsertSettingErr) {\n        span?.addEvent('upsert_settings_error', {\n          message: upsertSettingErr.message,\n        });\n        logger.error({\n          msg: `Could not upsert settings after creating new session`,\n          session,\n          err: upsertSettingErr,\n        });\n      }\n\n      if (process.env.COUNTLY_APP_KEY) {\n        Countly.add_event({\n          key: 'topic_created',\n          count: 1,\n          segmentation: {\n            participants: session.participants.length,\n          },\n        });\n      }\n    } catch (err) {\n      let shouldLog = true;\n      let logLevel: 'info' | 'warn' | 'error' = 'error';\n      let errorMessage =\n        `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n        `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`;\n      let modalErrors: { [key: string]: string } = {};\n\n      const slackErrorCode = err.data && err.data.error;\n      if (slackErrorCode) {\n        span?.setAttributes({ slackErrorCode });\n        errorMessage =\n          `Unexpected Slack API Error: \"*${slackErrorCode}*\" (error code: ${errorId})\\n\\n` +\n          `If you think this is an issue, please report to <${process.env.ISSUES_LINK}>`;\n      }\n\n      /**\n       * Slack API platform errors\n       */\n      if (slackErrorCode == 'not_in_channel') {\n        shouldLog = false;\n        errorMessage =\n          `Poker Planner app is not added to this channel. ` +\n          `Please try again after adding it. ` +\n          `You can simply add the app just by mentioning it, like \"*@poker_planner*\".`;\n      } else if (slackErrorCode == 'channel_not_found') {\n        shouldLog = false;\n        errorMessage =\n          `Oops, we couldn't find this channel. ` +\n          `Are you sure that Poker Planner app is added to this channel/conversation? ` +\n          `You can simply add the app by mentioning it, like \"*@poker_planner*\". ` +\n          `However this may not work in Group DMs, you need to explicitly add it as a ` +\n          `member from conversation details menu. Please try again after adding it.`;\n      } else if (slackErrorCode == 'token_revoked') {\n        logLevel = 'info';\n        errorMessage =\n          `Poker Planner's access has been revoked for this workspace. ` +\n          `In order to use it, you need to install the app again on ` +\n          `<${process.env.APP_INSTALL_LINK}>`;\n      } else if (slackErrorCode == 'method_not_supported_for_channel_type') {\n        logLevel = 'info';\n        errorMessage = `Poker Planner cannot be used in this type of conversations.`;\n      } else if (slackErrorCode == 'missing_scope') {\n        if (err.data.needed == 'mpim:read') {\n          logLevel = 'info';\n          errorMessage =\n            `Poker Planner now supports Group DMs! However it requires ` +\n            `additional permissions that we didn't obtained previously. You need to visit ` +\n            `<${process.env.APP_INSTALL_LINK}> and reinstall the app to enable this feature.`;\n        } else if (err.data.needed == 'usergroups:read') {\n          logLevel = 'info';\n          errorMessage =\n            `Poker Planner now supports @usergroup mentions! However it requires ` +\n            `additional permissions that we didn't obtained previously. You need to visit ` +\n            `<${process.env.APP_INSTALL_LINK}> and reinstall the app to enable this feature.`;\n        }\n      } else if (\n        /**\n         * Internal errors\n         */\n        err.message == SessionControllerErrorCode.NO_PARTICIPANTS\n      ) {\n        shouldLog = false;\n        errorMessage = `You must add at least 1 person.`;\n        modalErrors = {\n          participants: errorMessage,\n        };\n      } else if (err.message == SessionControllerErrorCode.TITLE_REQUIRED) {\n        shouldLog = false;\n        errorMessage = `Title is required`;\n        modalErrors = {\n          title: errorMessage,\n        };\n      } else if (err.message == SessionControllerErrorCode.INVALID_POINTS) {\n        shouldLog = false;\n        errorMessage =\n          `You must provide at least 2 poker points seperated by space, ` +\n          `the maximum is 25.`;\n        modalErrors = {\n          points: errorMessage,\n        };\n      } else if (err.message == SessionControllerErrorCode.UNEXPECTED_PAYLOAD) {\n        shouldLog = false;\n        errorMessage =\n          `Oops, Slack API sends a payload that we don't expect. Please try again.\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}> ` +\n          `with following error code: ${errorId}`;\n      }\n\n      if (shouldLog) {\n        logger[logLevel]({\n          msg: `Could not create session`,\n          errorId,\n          err,\n          payload,\n        });\n      }\n\n      span?.setAttributes({\n        'error.id': errorId,\n        userErrorMessage: errorMessage,\n      });\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.UNKNOWN,\n        message: err.message,\n      });\n\n      // Show the generic errors on a new modal\n      if (isEmpty(modalErrors)) {\n        return res.json({\n          response_action: 'push',\n          view: {\n            type: 'modal',\n            title: {\n              type: 'plain_text',\n              text: 'Poker Planner',\n              emoji: true,\n            },\n            close: {\n              type: 'plain_text',\n              text: 'Close',\n              emoji: true,\n            },\n            blocks: [\n              {\n                type: 'section',\n                text: {\n                  type: 'mrkdwn',\n                  text: `:x: ${errorMessage}`,\n                },\n              },\n            ],\n          },\n        });\n      }\n\n      // Show error on form elements\n      return res.json({\n        response_action: 'errors',\n        errors: modalErrors,\n      });\n    }\n  }\n\n  /**\n   * A user clicks on a vote button.\n   */\n  @Trace()\n  static async vote({\n    payload, // action request payload\n    team,\n    session,\n    res,\n  }: {\n    payload: IInteractiveMessageActionPayload;\n    team: ITeam;\n    session: ISession;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    const point = payload.actions[0].value;\n    span?.setAttributes({ point });\n    logger.info({\n      msg: `Voting`,\n      point,\n      sessionId: session.id,\n      team: {\n        id: team.id,\n        name: team.name,\n      },\n      user: {\n        id: payload.user.id,\n        name: payload.user.name,\n      },\n    });\n    const [voteErr] = await to(\n      SessionController.vote(session, team, payload.user.id, point)\n    );\n\n    if (voteErr) {\n      switch (voteErr.message) {\n        case SessionControllerErrorCode.SESSION_NOT_ACTIVE: {\n          return res.json({\n            text: `You cannot vote revealed or cancelled session`,\n            response_type: 'ephemeral',\n            replace_original: false,\n          });\n        }\n\n        case SessionControllerErrorCode.ONLY_PARTICIPANTS_CAN_VOTE: {\n          return res.json({\n            text: `You are not a participant of that session`,\n            response_type: 'ephemeral',\n            replace_original: false,\n          });\n        }\n\n        // Unknown error\n        default: {\n          const errorId = generateId();\n          let errorMessage =\n            `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n            `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`;\n\n          const slackErrorCode = (voteErr as any)?.data?.error;\n          if (slackErrorCode) {\n            span?.setAttributes({ slackErrorCode });\n            errorMessage =\n              `Unexpected Slack API Error: \"*${slackErrorCode}*\", please try again later (error code: ${errorId})\\n\\n` +\n              `If you think this is an issue, please report to <${process.env.ISSUES_LINK}>`;\n          }\n          if (slackErrorCode == 'channel_not_found') {\n            errorMessage =\n              `Unexpected Slack API Error: \"*${slackErrorCode}*\". Are you using Poker Planner on a shared channel? ` +\n              `Shared channels are not supported due to Slack API limitations.\\n\\n` +\n              `If you think this is an issue, please report to <${process.env.ISSUES_LINK}> with this error code: ${errorId}`;\n          }\n\n          logger.error({\n            msg: `Could not vote`,\n            errorId,\n            err: voteErr,\n            payload,\n          });\n          span?.setAttributes({ 'error.id': errorId });\n          span?.setStatus({\n            code: opentelemetry.CanonicalCode.INVALID_ARGUMENT,\n            message: `Unexpected vote error`,\n          });\n          return res.json({\n            text: errorMessage,\n            response_type: 'ephemeral',\n            replace_original: false,\n          });\n        }\n      }\n    }\n\n    // Successfully voted\n\n    if (process.env.COUNTLY_APP_KEY) {\n      Countly.add_event({\n        key: 'topic_voted',\n        count: 1,\n        segmentation: {\n          points: payload.actions[0].value,\n        },\n      });\n    }\n\n    return res.send();\n  }\n\n  /**\n   * A user clicks reveal button.\n   */\n  @Trace()\n  static async revealSession({\n    payload, // action request payload\n    team,\n    session,\n    res,\n  }: {\n    payload: IInteractiveMessageActionPayload;\n    team: ITeam;\n    session: ISession;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    span?.setAttributes({\n      sessionProtected: session.protected,\n      sessionCreatorId: session.userId,\n    });\n\n    if (session.protected && session.userId != payload.user.id) {\n      return res.json({\n        text: `This session is protected, only the creator can reveal it.`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    logger.info({\n      msg: `Revealing votes`,\n      sessionId: session.id,\n      team: {\n        id: team.id,\n        name: team.name,\n      },\n      user: {\n        id: payload.user.id,\n        name: payload.user.name,\n      },\n    });\n    const [revealErr] = await to(\n      SessionController.revealAndUpdateMessage(session, team, payload.user.id)\n    );\n\n    if (revealErr) {\n      const errorId = generateId();\n      let errorMessage =\n        `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n        `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`;\n\n      const slackErrorCode = (revealErr as any)?.data?.error;\n      if (slackErrorCode) {\n        span?.setAttributes({ slackErrorCode });\n        errorMessage =\n          `Unexpected Slack API Error: \"*${slackErrorCode}*\", please try again later (error code: ${errorId})\\n\\n` +\n          `If you think this is an issue, please report to <${process.env.ISSUES_LINK}>`;\n      }\n      if (slackErrorCode == 'channel_not_found') {\n        errorMessage =\n          `Unexpected Slack API Error: \"*${slackErrorCode}*\". Are you using Poker Planner on a shared channel? ` +\n          `Shared channels are not supported due to Slack API limitations.\\n\\n` +\n          `If you think this is an issue, please report to <${process.env.ISSUES_LINK}> with this error code: ${errorId}`;\n      }\n\n      logger.error({\n        msg: `Could not reveal session`,\n        errorId,\n        err: revealErr,\n        payload,\n      });\n      span?.setAttributes({ 'error.id': errorId });\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: `Unexpected error while reveal session & update message`,\n      });\n      return res.json({\n        text: errorMessage,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (process.env.COUNTLY_APP_KEY) {\n      Countly.add_event({\n        key: 'topic_revealed',\n        count: 1,\n        segmentation: {},\n      });\n    }\n\n    return res.send();\n  }\n\n  /**\n   * A user clicks cancel button.\n   */\n  @Trace()\n  static async cancelSession({\n    payload, // action request payload\n    team,\n    session,\n    res,\n  }: {\n    payload: IInteractiveMessageActionPayload;\n    team: ITeam;\n    session: ISession;\n    res: express.Response;\n  }) {\n    const span = getSpan();\n    span?.setAttributes({\n      sessionProtected: session.protected,\n      sessionCreatorId: session.userId,\n    });\n\n    if (session.protected && session.userId != payload.user.id) {\n      return res.json({\n        text: `This session is protected, only the creator can cancel it.`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    logger.info({\n      msg: `Cancelling session`,\n      sessionId: session.id,\n      team: {\n        id: team.id,\n        name: team.name,\n      },\n      user: {\n        id: payload.user.id,\n        name: payload.user.name,\n      },\n    });\n    const [cancelErr] = await to(\n      SessionController.cancelAndUpdateMessage(session, team, payload.user.id)\n    );\n\n    if (cancelErr) {\n      const errorId = generateId();\n      let errorMessage =\n        `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n        `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`;\n\n      const slackErrorCode = (cancelErr as any)?.data?.error;\n      if (slackErrorCode) {\n        span?.setAttributes({ slackErrorCode });\n        errorMessage =\n          `Unexpected Slack API Error: \"*${slackErrorCode}*\", please try again later (error code: ${errorId})\\n\\n` +\n          `If you think this is an issue, please report to <${process.env.ISSUES_LINK}>`;\n      }\n      if (slackErrorCode == 'channel_not_found') {\n        errorMessage =\n          `Unexpected Slack API Error: \"*${slackErrorCode}*\". Are you using Poker Planner on a shared channel? ` +\n          `Shared channels are not supported due to Slack API limitations.\\n\\n` +\n          `If you think this is an issue, please report to <${process.env.ISSUES_LINK}> with this error code: ${errorId}`;\n      }\n\n      logger.error({\n        msg: `Could not cancel session`,\n        errorId,\n        err: cancelErr,\n        payload,\n      });\n      span?.setAttributes({ 'error.id': errorId });\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: `Unexpected error while cancel session & update message`,\n      });\n      return res.json({\n        text: errorMessage,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (process.env.COUNTLY_APP_KEY) {\n      Countly.add_event({\n        key: 'topic_cancelled',\n        count: 1,\n        segmentation: {},\n      });\n    }\n\n    return res.send();\n  }\n}\n","import * as express from 'express';\nimport { WebClient } from '@slack/web-api';\nimport logger from '../lib/logger';\nimport Countly from 'countly-sdk-nodejs';\nimport { TeamStore } from '../team/team-model';\nimport { generate as generateId } from 'shortid';\nimport { to } from '../lib/to';\n\nexport class OAuthRoute {\n  /**\n   * GET /oauth\n   */\n  static async handle(req: express.Request, res: express.Response) {\n    // Slack-side error, display error message\n    if (req.query.error) {\n      logger.error({\n        msg: `Could not oauth`,\n        err: req.query.error,\n      });\n      return res.status(500).send(req.query.error);\n    }\n\n    // Installed!\n    if (req.query.code) {\n      const slackWebClient = new WebClient();\n      const [oauthErr, accessResponse] = await to(\n        slackWebClient.oauth.v2.access({\n          client_id: process.env.SLACK_CLIENT_ID,\n          client_secret: process.env.SLACK_CLIENT_SECRET,\n          code: req.query.code as string,\n        })\n      );\n\n      if (oauthErr) {\n        const errorId = generateId();\n        logger.error({\n          msg: `Could not oauth, slack api call failed`,\n          errorId,\n          err: oauthErr,\n        });\n        return res\n          .status(500)\n          .send(\n            `Internal server error, please try again (error code: ${errorId})\\n\\n` +\n              `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`\n          );\n      }\n\n      const [upsertErr, team] = await to(\n        TeamStore.upsert({\n          id: (accessResponse as any).team.id,\n          name: (accessResponse as any).team.name,\n          access_token: (accessResponse as any).access_token,\n          scope: (accessResponse as any).scope,\n          user_id: (accessResponse as any).authed_user.id,\n        })\n      );\n\n      if (upsertErr) {\n        const errorId = generateId();\n        logger.error({\n          msg: `Could not oauth, sqlite upsert failed`,\n          errorId,\n          err: upsertErr,\n        });\n        res\n          .status(500)\n          .send(\n            `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n              `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`\n          );\n      }\n\n      if (process.env.COUNTLY_APP_KEY) {\n        Countly.add_event({\n          key: 'added_to_team',\n          count: 1,\n          segmentation: {},\n        });\n      }\n\n      logger.info({\n        msg: `Added to team`,\n        team,\n      });\n\n      return res.render('oauth-success', {\n        layout: false,\n        data: {\n          SLACK_APP_ID: process.env.SLACK_APP_ID,\n          TEAM_NAME: team.name,\n        },\n      });\n    }\n\n    // Unknown error\n    const errorId = generateId();\n    logger.error({\n      msg: `Could not oauth, unknown error`,\n      errorId,\n      query: req.query,\n    });\n    return res\n      .status(500)\n      .send(\n        `Unknown error (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`\n      );\n  }\n}\n","import * as express from 'express';\nimport logger from '../lib/logger';\nimport Countly from 'countly-sdk-nodejs';\nimport { TeamStore, ChannelSettingKey } from '../team/team-model';\nimport { generate as generateId } from 'shortid';\nimport { to } from '../lib/to';\nimport isString from 'lodash/isString';\nimport { ISlackCommandRequestBody } from '../vendor/slack-api-interfaces';\nimport {\n  SessionController,\n  DEFAULT_POINTS,\n} from '../session/session-controller';\nimport * as opentelemetry from '@opentelemetry/api';\nimport { Trace, getSpan } from '../lib/trace-decorator';\n\nexport class PPCommandRoute {\n  /**\n   * POST /slack/pp-command\n   * POST /slack/pp-slash-command\n   */\n  static async handle(req: express.Request, res: express.Response) {\n    const cmd = req.body as ISlackCommandRequestBody;\n\n    if (cmd.token != process.env.SLACK_VERIFICATION_TOKEN) {\n      logger.error({\n        msg: `Could not created session, slack verification token is invalid`,\n        cmd,\n      });\n      return res.json({\n        text: `Invalid slack verification token, please get in touch with the maintainer`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (!isString(cmd.text)) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not created session, command.text not string`,\n        errorId,\n        cmd,\n      });\n      return res.json({\n        text:\n          `Unexpected command usage (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    const firstWord = cmd.text.trim().split(' ')[0];\n    switch (firstWord) {\n      case 'help': {\n        return PPCommandRoute.help(res);\n      }\n\n      case 'config': {\n        return await PPCommandRoute.configure(cmd, res);\n      }\n\n      default: {\n        return await PPCommandRoute.openNewSessionModal(cmd, res);\n      }\n    }\n  }\n\n  /**\n   * `/pp some task name`\n   */\n  @Trace()\n  static async openNewSessionModal(\n    cmd: ISlackCommandRequestBody,\n    res: express.Response\n  ) {\n    const span = getSpan();\n    span?.setAttributes({\n      teamId: cmd.team_id,\n      teamDomain: cmd.team_domain,\n      channelId: cmd.channel_id,\n      channelName: cmd.channel_name,\n      userId: cmd.user_id,\n      userName: cmd.user_name,\n      text: cmd.text,\n    });\n\n    if (cmd.channel_name == 'directmessage') {\n      return res.json({\n        text: `Poker planning cannot be started in direct messages`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    const [teamGetErr, team] = await to(TeamStore.findById(cmd.team_id));\n    if (teamGetErr) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not created session, could not get the team from db`,\n        errorId,\n        err: teamGetErr,\n        cmd,\n      });\n      span?.setAttribute('error.id', errorId);\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: teamGetErr.message,\n      });\n      return res.json({\n        text:\n          `Internal server error, please try again later (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    if (!team) {\n      logger.info({\n        msg: `Could not created session, team could not be found`,\n        cmd,\n      });\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.NOT_FOUND,\n        message: 'Team not found',\n      });\n      return res.json({\n        text: `Your Slack team (${cmd.team_domain}) could not be found, please reinstall Poker Planner on <${process.env.APP_INSTALL_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    // If permissions are old, show migration message\n    if (\n      team.scope ==\n      'identify,commands,channels:read,groups:read,users:read,chat:write:bot'\n    ) {\n      logger.info({\n        msg: `Migration message`,\n        team: {\n          id: team.id,\n          name: team.name,\n        },\n        user: {\n          id: cmd.user_id,\n          name: cmd.user_name,\n        },\n      });\n      span?.addEvent('show_migration_message');\n      return res.json({\n        text:\n          'Poker Planner has migrated to ' +\n          \"<https://slackhq.com/introducing-a-dramatically-upgraded-slack-app-toolkit|Slack's new app toolkit> \" +\n          'which adds granular permissions for better security. We now depend on bot permissions instead of ' +\n          'user permissions. So that you can explicitly manage which channels/conversations Poker Planner can ' +\n          'access. However, this requires a couple of changes:\\n\\n• In order to obtain new bot permissions ' +\n          'and drop user ones, *you need to reinstall Poker Planner* to your workspace on ' +\n          `<${process.env.APP_INSTALL_LINK}>\\n• Before using \\`/pp\\` command, *Poker Planner app must be ` +\n          'added to that channel/conversation*. You can simply add or invite it by just mentioning the app like ' +\n          '`@poker_planner`. You can also do that from channel/converstion details menu.',\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n\n    /**\n     * From: https://api.slack.com/legacy/interactive-messages\n     *\n     * Responding right away\n     * ---\n     * You must respond within 3 seconds. If it takes your application longer\n     * to process the request, we recommend responding with a HTTP 200 OK\n     * immediately, then use the response_url to respond five times within\n     * thirty minutes.\n     *\n     * Responding incrementally with response_url\n     * ---\n     * Use the response URL provided in the post to:\n     * - Replace the current message\n     * - Respond with a public message in the channel\n     * - Respond with an ephemeral message in the channel that only the\n     * acting user will see\n     *\n     * You'll be able to use a response_url five times within 30 minutes.\n     * After that, it's best to move on to new messages and new interactions.\n     */\n\n    try {\n      // Prepare settings (participants, points...)\n      const [settingsFetchErr, channelSettings] = await to(\n        TeamStore.fetchSettings(team.id, cmd.channel_id)\n      );\n      if (settingsFetchErr) {\n        span?.addEvent('settings_fetch_error', {\n          error: settingsFetchErr.message,\n        });\n      }\n      const settings = {\n        [ChannelSettingKey.PARTICIPANTS]: [] as string[],\n        [ChannelSettingKey.POINTS]: DEFAULT_POINTS,\n        [ChannelSettingKey.PROTECTED]: false,\n        [ChannelSettingKey.AVERAGE]: false,\n      };\n      if (channelSettings?.[ChannelSettingKey.PARTICIPANTS]) {\n        settings[ChannelSettingKey.PARTICIPANTS] = channelSettings[\n          ChannelSettingKey.PARTICIPANTS\n        ].split(' ');\n      }\n      if (team.custom_points) {\n        settings[ChannelSettingKey.POINTS] = team.custom_points.split(' ');\n      }\n      if (channelSettings?.[ChannelSettingKey.POINTS]) {\n        settings[ChannelSettingKey.POINTS] = channelSettings[\n          ChannelSettingKey.POINTS\n        ].split(' ');\n      }\n      if (channelSettings?.[ChannelSettingKey.PROTECTED]) {\n        settings[ChannelSettingKey.PROTECTED] = JSON.parse(\n          channelSettings[ChannelSettingKey.PROTECTED]\n        );\n      }\n      if (channelSettings?.[ChannelSettingKey.AVERAGE]) {\n        settings[ChannelSettingKey.AVERAGE] = JSON.parse(\n          channelSettings[ChannelSettingKey.AVERAGE]\n        );\n      }\n\n      await SessionController.openModal({\n        triggerId: cmd.trigger_id,\n        team,\n        channelId: cmd.channel_id,\n        title: SessionController.stripMentions(cmd.text).trim(),\n        participants: settings[ChannelSettingKey.PARTICIPANTS],\n        points: settings[ChannelSettingKey.POINTS],\n        isProtected: settings[ChannelSettingKey.PROTECTED],\n        calculateAverage: settings[ChannelSettingKey.AVERAGE],\n      });\n\n      // Send acknowledgement back to API -- HTTP 200\n      res.send();\n\n      if (process.env.COUNTLY_APP_KEY) {\n        Countly.add_event({\n          key: 'new_session_modal_opened',\n          count: 1,\n          segmentation: {},\n        });\n      }\n    } catch (err) {\n      const errorId = generateId();\n      logger.error({\n        msg: `Could not open modal`,\n        errorId,\n        err,\n        cmd,\n      });\n      span?.setAttribute('error.id', errorId);\n      span?.setStatus({\n        code: opentelemetry.CanonicalCode.INTERNAL,\n        message: err.message,\n      });\n      return res.json({\n        text:\n          `Could not open modal (error code: ${errorId})\\n\\n` +\n          `If this problem is persistent, you can open an issue on <${process.env.ISSUES_LINK}>`,\n        response_type: 'ephemeral',\n        replace_original: false,\n      });\n    }\n  }\n\n  /**\n   * `/pp config ...`\n   */\n  static async configure(cmd: ISlackCommandRequestBody, res: express.Response) {\n    return res.json({\n      text:\n        'This command is deprecated. The session settings (points, participants, ...) ' +\n        'are now persisted automatically for each channel/conversation.',\n      response_type: 'ephemeral',\n      replace_original: false,\n    });\n  }\n\n  /**\n   * `/pp help`\n   */\n  static help(res: express.Response) {\n    return res.json({\n      text: ``,\n      response_type: 'ephemeral',\n      replace_original: false,\n      attachments: [\n        {\n          color: '#3AA3E3',\n          text:\n            '`/pp`\\n' + 'Opens a dialog to start a new poker planning session.',\n        },\n        {\n          color: '#3AA3E3',\n          text:\n            '`/pp some topic text`\\n' +\n            'Opens the same dialog, however title input is automatically ' +\n            'filled with the value you provided.',\n        },\n      ],\n    });\n  }\n}\n","import * as SessionStore from './session-model';\nimport { ISession } from './isession';\nimport chunk from 'lodash/chunk';\nimport map from 'lodash/map';\nimport groupBy from 'lodash/groupBy';\nimport { ITeam } from '../team/team-model';\nimport { WebClient } from '@slack/web-api';\nimport logger from '../lib/logger';\nimport { Trace, getSpan } from '../lib/trace-decorator';\n\nexport const DEFAULT_POINTS = [\n  '0',\n  '0.5',\n  '1',\n  '2',\n  '3',\n  '5',\n  '8',\n  '13',\n  '20',\n  '40',\n  '100',\n  '∞',\n  '?',\n];\n\nexport enum SessionControllerErrorCode {\n  NO_PARTICIPANTS = 'no_participants',\n  TITLE_REQUIRED = 'title_required',\n  UNEXPECTED_PAYLOAD = 'unexpected_payload',\n  INVALID_POINTS = 'invalid_points',\n  SESSION_NOT_ACTIVE = 'session_not_active',\n  ONLY_PARTICIPANTS_CAN_VOTE = 'only_participants_can_vote',\n}\n\nexport class SessionController {\n  /**\n   * Sends a message for the provided session.\n   * CAUTION: Participants must resolved before using this method.\n   */\n  @Trace()\n  static async postMessage(session: ISession, team: ITeam) {\n    const slackWebClient = new WebClient(team.access_token);\n    const votesText = map(\n      session.participants.sort(),\n      (userId) => `<@${userId}>: awaiting`\n    ).join('\\n');\n\n    return slackWebClient.chat.postMessage({\n      channel: session.channelId,\n      text: `Title: *${session.title}*\\n\\nVotes:\\n${votesText}`,\n      attachments: buildMessageAttachments(session) as any,\n    });\n  }\n\n  /**\n   * Opens a `new session` modal\n   */\n  @Trace()\n  static async openModal({\n    triggerId,\n    team,\n    channelId,\n    title,\n    participants,\n    points,\n    isProtected,\n    calculateAverage,\n  }: {\n    triggerId: string;\n    team: ITeam;\n    channelId: string;\n    title: string;\n    participants: string[];\n    points: string[];\n    isProtected: boolean;\n    calculateAverage: boolean;\n  }) {\n    const slackWebClient = new WebClient(team.access_token);\n\n    const protectedCheckboxesOption = {\n      text: {\n        type: 'plain_text',\n        text: 'Protected (prevent others to cancel or reveal this session)',\n        emoji: true,\n      },\n      value: 'protected',\n    } as any;\n\n    const averageCheckboxesOption = {\n      text: {\n        type: 'plain_text',\n        text: 'Calculate the average (only numeric points will be used)',\n        emoji: true,\n      },\n      value: 'average',\n    } as any;\n\n    let initialOptions = undefined;\n    if (isProtected) {\n      initialOptions = initialOptions || [];\n      initialOptions.push(protectedCheckboxesOption);\n    }\n    if (calculateAverage) {\n      initialOptions = initialOptions || [];\n      initialOptions.push(averageCheckboxesOption);\n    }\n\n    await slackWebClient.views.open({\n      trigger_id: triggerId,\n      view: {\n        callback_id: `newSessionModal:submit`,\n        private_metadata: JSON.stringify({ channelId }),\n        type: 'modal',\n        title: {\n          type: 'plain_text',\n          text: 'Poker Planner',\n          emoji: true,\n        },\n        submit: {\n          type: 'plain_text',\n          text: 'Start New Session',\n          emoji: true,\n        },\n        close: {\n          type: 'plain_text',\n          text: 'Cancel',\n          emoji: true,\n        },\n        blocks: [\n          {\n            type: 'input',\n            block_id: 'title',\n            element: {\n              type: 'plain_text_input',\n              placeholder: {\n                type: 'plain_text',\n                text: 'Write a topic for this voting session',\n                emoji: true,\n              },\n              initial_value: title || '',\n            },\n            label: {\n              type: 'plain_text',\n              text: 'Title',\n              emoji: true,\n            },\n          },\n          {\n            type: 'input',\n            block_id: 'participants',\n            element: {\n              type: 'multi_users_select',\n              placeholder: {\n                type: 'plain_text',\n                text: 'Add users',\n                emoji: true,\n              },\n              initial_users: participants,\n              // max_selected_items: 25,\n            },\n            label: {\n              type: 'plain_text',\n              text: 'Participants',\n              emoji: true,\n            },\n          },\n          {\n            type: 'input',\n            block_id: 'points',\n            element: {\n              type: 'plain_text_input',\n              placeholder: {\n                type: 'plain_text',\n                text: 'Change poker points',\n                emoji: true,\n              },\n              initial_value: points.join(' ') || DEFAULT_POINTS.join(' '),\n            },\n            hint: {\n              type: 'plain_text',\n              text: 'Enter points separated by space',\n              emoji: true,\n            },\n            label: {\n              type: 'plain_text',\n              text: 'Points',\n              emoji: true,\n            },\n          },\n          {\n            type: 'input',\n            block_id: 'other',\n            optional: true,\n            element: {\n              type: 'checkboxes',\n              options: [protectedCheckboxesOption, averageCheckboxesOption],\n              initial_options: initialOptions,\n            },\n            label: {\n              type: 'plain_text',\n              text: 'Other',\n              emoji: true,\n            },\n          },\n          {\n            type: 'section',\n            text: {\n              type: 'mrkdwn',\n              text:\n                '> :bulb: These options will be *remembered* the next time you create a session *on this channel*.',\n            },\n          },\n        ],\n      },\n    });\n  }\n\n  /**\n   * Updates the session message as revealing all the votes.\n   * And clean-up the session from store.\n   */\n  @Trace()\n  static async revealAndUpdateMessage(\n    session: ISession,\n    team: ITeam,\n    userId: string\n  ) {\n    session.state = 'revealed';\n    await SessionController.updateMessage(session, team, userId);\n    await SessionStore.remove(session.id);\n  }\n\n  /**\n   * Updates the session message as cancelled.\n   * And clean-up the session from store.\n   */\n  @Trace()\n  static async cancelAndUpdateMessage(\n    session: ISession,\n    team: ITeam,\n    userId: string\n  ) {\n    session.state = 'cancelled';\n    await SessionController.updateMessage(session, team, userId);\n    await SessionStore.remove(session.id);\n  }\n\n  /**\n   *\n   */\n  @Trace()\n  static async vote(\n    session: ISession,\n    team: ITeam,\n    userId: string,\n    point: string\n  ) {\n    if (session.state != 'active') {\n      throw new Error(SessionControllerErrorCode.SESSION_NOT_ACTIVE);\n    }\n\n    if (session.participants.indexOf(userId) == -1) {\n      throw new Error(SessionControllerErrorCode.ONLY_PARTICIPANTS_CAN_VOTE);\n    }\n\n    session.votes[userId] = point;\n    session.state =\n      Object.keys(session.votes).length == session.participants.length\n        ? 'revealed'\n        : 'active';\n\n    if (session.state == 'revealed') {\n      await SessionController.updateMessage(session, team); // do not send userId\n      await SessionStore.remove(session.id);\n      logger.info({\n        msg: `Auto revealing votes`,\n        sessionId: session.id,\n        team: {\n          id: team.id,\n          name: team.name,\n        },\n      });\n      return;\n    }\n\n    // Voting is still active\n    await SessionController.updateMessage(session, team);\n    SessionStore.upsert(session);\n  }\n\n  /**\n   * Updates session message according to session state.\n   */\n  @Trace()\n  static async updateMessage(session: ISession, team: ITeam, userId?: string) {\n    const slackWebClient = new WebClient(team.access_token);\n\n    if (session.state == 'revealed') {\n      const voteGroups = groupBy(\n        session.participants,\n        (userId) => session.votes[userId] || 'not-voted'\n      );\n      const votesText = Object.keys(voteGroups)\n        .sort((a, b) => session.points.indexOf(a) - session.points.indexOf(b))\n        .map((point) => {\n          const votes = voteGroups[point];\n          const peopleText =\n            votes.length == 1 ? `1 person` : `${votes.length} people`;\n          const userIds = votes\n            .sort()\n            .map((userId) => `<@${userId}>`)\n            .join(', ');\n\n          if (point == 'not-voted') {\n            return `${peopleText} *did not vote* (${userIds})`;\n          }\n\n          return `${peopleText} voted *${point}* (${userIds})`;\n        })\n        .join('\\n');\n\n      let averageText = '';\n      if (session.average) {\n        const average = SessionController.getAverage(session.votes);\n        averageText = average\n          ? `\\nAverage: ${SessionController.getAverage(session.votes)}`\n          : '';\n      }\n\n      await slackWebClient.chat.update({\n        ts: session.rawPostMessageResponse.ts,\n        channel: session.rawPostMessageResponse.channel,\n        text: userId\n          ? `Title: *${session.title}* (revealed by <@${userId}>)\\n\\nResult:\\n${votesText}${averageText}`\n          : `Title: *${session.title}*\\n\\nResult:\\n${votesText}${averageText}`,\n        attachments: [],\n      });\n    } else if (session.state == 'cancelled') {\n      await slackWebClient.chat.update({\n        ts: session.rawPostMessageResponse.ts,\n        channel: session.rawPostMessageResponse.channel,\n        text: userId\n          ? `Title: *${session.title}* (cancelled by <@${userId}>)`\n          : `Title: *${session.title}* (cancelled)`,\n        attachments: [],\n      });\n    } else {\n      const votesText = map(session.participants.sort(), (userId) => {\n        if (session.votes.hasOwnProperty(userId)) {\n          return `<@${userId}>: :white_check_mark:`;\n        }\n\n        return `<@${userId}>: awaiting`;\n      }).join('\\n');\n\n      await slackWebClient.chat.update({\n        ts: session.rawPostMessageResponse.ts,\n        channel: session.rawPostMessageResponse.channel,\n        text: `Title: *${session.title}*\\n\\nVotes:\\n${votesText}`,\n        attachments: buildMessageAttachments(session) as any,\n      });\n    }\n  }\n\n  /**\n   * For given votes, calculate average point\n   */\n  static getAverage(votes: { [key: string]: string }): string | boolean {\n    const numericPoints = Object.values(votes)\n      .filter(SessionController.isNumeric)\n      .map(parseFloat);\n    if (numericPoints.length < 1) return false;\n    return (\n      numericPoints.reduce((a, b) => a + b) / numericPoints.length\n    ).toFixed(1);\n  }\n\n  static isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  /**\n   * For a given slack slash-command text, remove mentions\n   */\n  static stripMentions(text: string) {\n    return text\n      .replace(/<@(.*?)>/g, '')\n      .replace(/<!(.*?)>/g, '')\n      .replace(/\\s\\s+/g, ' ')\n      .trim();\n  }\n}\n\nexport function buildMessageAttachments(session: ISession) {\n  const pointAttachments = chunk(session.points, 5).map((points) => {\n    return {\n      text: '',\n      fallback: 'You are unable to vote',\n      callback_id: `vote:${session.id}`,\n      color: '#3AA3E3',\n      attachment_type: 'default',\n      actions: points.map((point) => ({\n        name: 'point',\n        text: point,\n        type: 'button',\n        value: point,\n      })),\n    };\n  });\n\n  return [\n    ...pointAttachments,\n    {\n      text: 'Actions',\n      fallback: 'You are unable to send action',\n      callback_id: `action:${session.id}`,\n      color: '#3AA3E3',\n      attachment_type: 'default',\n      actions: [\n        {\n          name: 'action',\n          text: 'Reveal',\n          type: 'button',\n          value: 'reveal',\n          style: 'danger',\n        },\n        {\n          name: 'action',\n          text: 'Cancel',\n          type: 'button',\n          value: 'cancel',\n          style: 'danger',\n        },\n      ],\n    },\n  ];\n}\n","import * as redis from '../lib/redis';\nimport { promisify } from 'util';\nimport { ISession } from './isession';\nimport logger from '../lib/logger';\nimport pickBy from 'lodash/pickBy';\n\n/**\n * Redis key stuff.\n */\nfunction getRedisKeyMatcher() {\n  return `${process.env.REDIS_NAMESPACE}:session:*`;\n}\n\nfunction buildRedisKey(sessionId: string) {\n  return `${process.env.REDIS_NAMESPACE}:session:${sessionId}`;\n}\n\n/**\n * In memory sessions object.\n */\nlet sessions: { [key: string]: ISession } = {};\n\n/**\n * Simple getter by session id.\n */\nexport function findById(id: string): ISession {\n  return sessions[id];\n}\n\n/**\n * Restores all the sessions from redis.\n */\nexport async function restore(): Promise<void> {\n  if (!process.env.USE_REDIS) return;\n\n  // Scan session keys in redis\n  const client = redis.getSingleton();\n  const scanAsync = promisify(client.scan.bind(client));\n\n  const keys: string[] = [];\n  let cursor = '0';\n\n  do {\n    const response = await scanAsync(cursor, 'MATCH', getRedisKeyMatcher());\n\n    cursor = response[0];\n    keys.push(...response[1]);\n  } while (cursor !== '0');\n\n  // Get these keys\n  if (keys.length > 0) {\n    const mgetAsync = promisify(client.mget.bind(client));\n    const rawSessions: string[] = await mgetAsync(keys);\n\n    rawSessions.forEach((rawSession) => {\n      if (!rawSession) return;\n\n      try {\n        const session = JSON.parse(rawSession) as ISession;\n        sessions[session.id] = session;\n      } catch (err) {\n        // NOOP\n      }\n    });\n  }\n\n  logger.info({\n    msg: 'Sessions restored from redis',\n    count: Object.keys(sessions).length,\n  });\n}\n\n/**\n * Holds persisting timeout ids.\n */\nconst persistTimeouts: { [key: string]: number } = {};\n\n/**\n * Updates/inserts the session. This method immediately updates in-memory\n * database. However if redis is being used, we delay (debounce) persisting\n * of a session for 1 second.\n */\nexport function upsert(session: ISession) {\n  sessions[session.id] = session;\n\n  // If using redis, debounce persisting\n  if (process.env.USE_REDIS) {\n    if (persistTimeouts[session.id]) clearTimeout(persistTimeouts[session.id]);\n    persistTimeouts[session.id] = setTimeout(\n      () => persist(session.id),\n      1000\n    ) as any;\n  }\n}\n\n/**\n * Reads a session from in-memory db, and persists to redis.\n */\nasync function persist(sessionId: string) {\n  if (!process.env.USE_REDIS) return;\n\n  // Immediately delete the timeout key\n  delete persistTimeouts[sessionId];\n\n  // If specified session is not in in-memory db,\n  // it must be deleted, so NOOP.\n  const session = sessions[sessionId];\n  if (!session) return;\n\n  // If specified session is expired, NOOP.\n  // We expect that its redis record is/will-be deleted by its TTL.\n  const remainingTTL = session.expiresAt - Date.now();\n  if (remainingTTL <= 0) return;\n\n  const client = redis.getSingleton();\n  const setAsync = promisify(client.set.bind(client));\n  try {\n    await setAsync(\n      buildRedisKey(session.id),\n      JSON.stringify(session),\n      'PX',\n      remainingTTL\n    );\n  } catch (err) {\n    logger.error({\n      msg: 'Could not persist session',\n      err,\n      session,\n      remainingTTL,\n    });\n  }\n}\n\n/**\n * Deletes the session.\n */\nexport async function remove(id: string) {\n  delete sessions[id];\n\n  if (process.env.USE_REDIS) {\n    const client = redis.getSingleton();\n    const delAsync = promisify(client.del.bind(client));\n    await delAsync(buildRedisKey(id));\n  }\n}\n\n/**\n * Set a interval that deletes expired sessions\n */\nsetInterval(() => {\n  const now = Date.now();\n  const previousSessionCount = Object.keys(sessions).length;\n\n  sessions = pickBy(sessions, (session) => {\n    const remainingTTL = session.expiresAt - now;\n    return remainingTTL > 0;\n  });\n\n  const expiredSessionCount =\n    previousSessionCount - Object.keys(sessions).length;\n\n  if (expiredSessionCount > 0) {\n    logger.info({\n      msg: 'Cleaned up expired sessions',\n      count: expiredSessionCount,\n    });\n  }\n}, 60000);\n","import * as sqlite from '../lib/sqlite';\nimport { Trace, getSpan } from '../lib/trace-decorator';\n\nexport interface ITeam {\n  id: string;\n  name: string;\n  access_token: string;\n  scope: string;\n  user_id: string;\n  custom_points: string;\n}\n\nexport enum ChannelSettingKey {\n  PARTICIPANTS = 'participants',\n  POINTS = 'points',\n  PROTECTED = 'protected',\n  AVERAGE = \"average\",\n}\n\nexport interface IChannelSetting {\n  team_id: string;\n  channel_id: string;\n  setting_key: string;\n  setting_value: string;\n}\n\nexport class TeamStore {\n  @Trace({ name: 'team.findById' })\n  static async findById(id: string): Promise<ITeam> {\n    const span = getSpan();\n    span?.setAttribute('id', id);\n    const db = sqlite.getSingleton();\n    return db.get('SELECT * FROM team WHERE id = ?', id);\n  }\n\n  @Trace({ name: 'team.create' })\n  static async create({\n    id,\n    name,\n    access_token,\n    scope,\n    user_id,\n  }: Pick<ITeam, 'id' | 'name' | 'access_token' | 'scope' | 'user_id'>) {\n    const span = getSpan();\n    span?.setAttributes({ id, name, scope, user_id });\n    const db = sqlite.getSingleton();\n    await db.run(\n      `INSERT INTO\n          team (id, name, access_token, scope, user_id)\n        VALUES\n          ($id, $name, $access_token, $scope, $user_id)`,\n      {\n        $id: id,\n        $name: name,\n        $access_token: access_token,\n        $scope: scope,\n        $user_id: user_id,\n      }\n    );\n  }\n\n  @Trace({ name: 'team.update' })\n  static async update({\n    id,\n    name,\n    access_token,\n    scope,\n    user_id,\n  }: Pick<ITeam, 'id' | 'name' | 'access_token' | 'scope' | 'user_id'>) {\n    const span = getSpan();\n    span?.setAttributes({ id, name, scope, user_id });\n    const db = sqlite.getSingleton();\n    await db.run(\n      `UPDATE\n        team\n      SET\n        name = $name,\n        access_token = $access_token,\n        scope = $scope,\n        user_id = $user_id\n      WHERE\n        id = $id`,\n      {\n        $id: id,\n        $name: name,\n        $access_token: access_token,\n        $scope: scope,\n        $user_id: user_id,\n      }\n    );\n  }\n\n  @Trace({ name: 'team.upsert' })\n  static async upsert({\n    id,\n    name,\n    access_token,\n    scope,\n    user_id,\n  }: Pick<ITeam, 'id' | 'name' | 'access_token' | 'scope' | 'user_id'>) {\n    const span = getSpan();\n    span?.setAttributes({ id, name, scope, user_id });\n    const team = await TeamStore.findById(id);\n    if (!team) {\n      await TeamStore.create({ id, name, access_token, scope, user_id });\n    } else {\n      await TeamStore.update({ id, name, access_token, scope, user_id });\n    }\n    return TeamStore.findById(id);\n  }\n\n  @Trace()\n  static async fetchSettings(teamId: string, channelId: string) {\n    const span = getSpan();\n    span?.setAttributes({ teamId, channelId });\n    const db = sqlite.getSingleton();\n    const settingRows = await db.all(\n      `SELECT\n        setting_key,\n        setting_value\n      FROM\n        channel_settings\n      WHERE\n        team_id = $teamId AND\n        channel_id = $channelId;`,\n      {\n        $teamId: teamId,\n        $channelId: channelId,\n      }\n    );\n\n    const rv: { [key: string]: string } = {};\n    settingRows.forEach((row: IChannelSetting) => {\n      rv[row.setting_key] = row.setting_value;\n    });\n\n    return rv;\n  }\n\n  @Trace()\n  static async upsertSettings(\n    teamId: string,\n    channelId: string,\n    settings: { [key: string]: string }\n  ) {\n    const tasks = Object.keys(settings).map((settingKey) =>\n      TeamStore.upsertSetting(\n        teamId,\n        channelId,\n        settingKey,\n        settings[settingKey]\n      )\n    );\n    await Promise.all(tasks);\n  }\n\n  @Trace()\n  static async upsertSetting(\n    teamId: string,\n    channelId: string,\n    key: string,\n    value: string\n  ) {\n    const span = getSpan();\n    span?.setAttributes({ teamId, channelId, key, value });\n    const db = sqlite.getSingleton();\n    await db.run(\n      `INSERT INTO\n        channel_settings (team_id, channel_id, setting_key, setting_value)\n      VALUES (\n        $teamId,\n        $channelId,\n        $settingKey,\n        $settingValue\n      )\n      ON CONFLICT(team_id, channel_id, setting_key)\n      DO UPDATE SET setting_value = $settingValue;`,\n      {\n        $teamId: teamId,\n        $channelId: channelId,\n        $settingKey: key,\n        $settingValue: value,\n      }\n    );\n  }\n}\n","module.exports = require(\"@opentelemetry/api\");","module.exports = require(\"@opentelemetry/exporter-jaeger\");","module.exports = require(\"@opentelemetry/tracing\");","module.exports = require(\"@slack/web-api\");","module.exports = require(\"async_hooks\");","module.exports = require(\"body-parser\");","module.exports = require(\"countly-sdk-nodejs\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-handlebars\");","module.exports = require(\"lodash/chunk\");","module.exports = require(\"lodash/find\");","module.exports = require(\"lodash/get\");","module.exports = require(\"lodash/groupBy\");","module.exports = require(\"lodash/isEmpty\");","module.exports = require(\"lodash/isObject\");","module.exports = require(\"lodash/isString\");","module.exports = require(\"lodash/map\");","module.exports = require(\"lodash/pickBy\");","module.exports = require(\"lodash/uniq\");","module.exports = require(\"pino\");","module.exports = require(\"pretty-ms\");","module.exports = require(\"redis\");","module.exports = require(\"shortid\");","module.exports = require(\"sqlite\");","module.exports = require(\"sqlite3\");","module.exports = require(\"util\");"],"sourceRoot":""}